<?xml version="1.0" encoding="utf-8"?>
<main:Section xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:mx="library://ns.adobe.com/flex/mx"
              xmlns:main="it.ht.rcs.console.main.*"
              xmlns:audit="it.ht.rcs.console.audit.view.*" creationComplete="init()"
              addedToStage="onAddedToStage()" removedFromStage="onRemovedFromStage()">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.audit.controller.AuditManager;
      
      private var created:Boolean = false;
      private function init():void
      {
        created = true;
        AuditManager.instance.start();
      }
      
      // Why this "created" check?
      // The callback of refresh() (called by start()) fire an event
      // that should be received by table header to populate filters.
      // These headers are not yet created when the callback fires for the first time.
      // So, the first time we call it via creationComplete(), subsequent calls will use
      // the standard addedToStage().
      private function onAddedToStage():void
      {
        if (created)
          AuditManager.instance.start();
      }
      
      private function onRemovedFromStage():void
      {
        AuditManager.instance.stop();
      }
    ]]>
  </fx:Script>
  
  <main:layout>
    <s:VerticalLayout gap="5" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
  </main:layout>
  
  <audit:AuditActionBar/>
  
  <audit:AuditTable dataProvider="{AuditManager.instance._view}"/>
  
</main:Section>