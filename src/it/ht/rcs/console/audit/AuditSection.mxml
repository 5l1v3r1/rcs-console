<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:audit="it.ht.rcs.console.audit.*"
         creationComplete="init()"
         addedToStage="onAddedToStage()" 
         removedFromStage="onRemovedFromStage()" 
         title="AUDIT">

  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.RefreshEvent;
      
      import mx.collections.ArrayCollection;
      import mx.collections.AsyncListView;
      import mx.core.FlexGlobals;
      import mx.events.CollectionEvent;
      import mx.events.FlexEvent;
      import mx.rpc.events.ResultEvent;

      [Bindable]
      public var filter:Object;
      
      [Bindable]
      public var filterValues:Object;
      
      [Bindable]
      public var filterObject:Object;
      
      private function buttonClick(event:MouseEvent):void
      {
        FlexGlobals.topLevelApplication.dispatchEvent(new Event('ciccio'));
        trace();
      }
      
      private function onAddedToStage():void 
      {
        FlexGlobals.topLevelApplication.addEventListener(RefreshEvent.REFRESH, onRefresh);
        onRefresh(null);
      }
      
      private function onRemovedFromStage():void
      {
        FlexGlobals.topLevelApplication.removeEventListener(RefreshEvent.REFRESH, onRefresh);
      }
      
      private function onRefresh(event:RefreshEvent):void
      {
        console.currentDB.audit_index({}, onResult);
        console.currentDB.audit_filters(onFiltersResult);
      }
      
      private function onFiltersResult(event:ResultEvent):void
      {
        trace(event.result.toString());
        grid.selectableFilters = event.result; 
      }
      
      protected function dgCreationComplete(event:FlexEvent):void 
      {
        var filter:Object = {}
        console.currentDB.audit_index(filter, onResult);
        console.currentDB.audit_filters(onFiltersResult);
      }
      
      private function onResult(e:ResultEvent):void
      {
        grid.dataProvider = new AsyncListView(e.result as ArrayCollection);
        grid.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, onDataProviderChange);
      }
      
      private function onDataProviderChange(event:CollectionEvent):void
      {
        grid.dataProvider.removeEventListener(CollectionEvent.COLLECTION_CHANGE, onDataProviderChange);
        grid.scroller.verticalScrollBar.value = grid.scroller.verticalScrollBar.maximum;
      }
      
      protected function init():void
      {
        
      }
      
    ]]>
  </fx:Script>

  <s:VGroup width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
    <s:HGroup width="100%">
      <s:Button height="20" label="Reset filters" click="buttonClick(event)" skinClass="it.ht.rcs.console.skins.DeleteButton"/>
      <s:Button height="20" label="Export" click="buttonClick(event)" skinClass="it.ht.rcs.console.skins.DownloadButton"/>
    </s:HGroup>
    <audit:AuditTable id="grid" width="100%" height="100%"
                      creationComplete="dgCreationComplete(event)" selectedFilter="{filter}"/>
  </s:VGroup>
  
</s:Panel>