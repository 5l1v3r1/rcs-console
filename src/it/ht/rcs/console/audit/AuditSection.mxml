<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:audit="it.ht.rcs.console.audit.*"
         addedToStage="onAddedToStage()" removedFromStage="onRemovedFromStage()" 
         title="AUDIT">

  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.FilterEvent;
      import it.ht.rcs.console.events.RefreshEvent;
      
      import mx.collections.ArrayCollection;
      import mx.collections.AsyncListView;
      import mx.core.FlexGlobals;
      import mx.events.CollectionEvent;
      import mx.rpc.events.ResultEvent;
      
      private function onAddedToStage():void
      {
        FlexGlobals.topLevelApplication.addEventListener(RefreshEvent.REFRESH, onRefresh);
        FlexGlobals.topLevelApplication.addEventListener(FilterEvent.FILTER_CHANGED, onFilterChanged);
      }
      
      private function onRemovedFromStage():void
      {
        FlexGlobals.topLevelApplication.removeEventListener(RefreshEvent.REFRESH, onRefresh);
        FlexGlobals.topLevelApplication.addEventListener(FilterEvent.FILTER_CHANGED, onFilterChanged);
      }
      
      private function onRefresh(event:RefreshEvent):void
      {
        console.currentDB.audit_filters(onFiltersResult);
        console.currentDB.audit_index(grid.filter, onResult);
      }
      
      private function onFiltersResult(event:ResultEvent):void
      {
        var e:FilterEvent = new FilterEvent(FilterEvent.FILTER_VALUES_CHANGED);
        e.filterValues = event.result;
        FlexGlobals.topLevelApplication.dispatchEvent(e);
      }
      
      private function onResult(e:ResultEvent):void
      {
        grid.dataProvider = new AsyncListView(e.result as ArrayCollection);
        grid.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, onDataProviderChange);
      }
      
      private function onDataProviderChange(event:CollectionEvent):void
      {
        grid.dataProvider.removeEventListener(CollectionEvent.COLLECTION_CHANGE, onDataProviderChange);
        grid.scroller.verticalScrollBar.value = grid.scroller.verticalScrollBar.maximum;
        grid.visible = true;
      }
      
      private function resetFilters(event:MouseEvent):void
      {
        FlexGlobals.topLevelApplication.dispatchEvent(new FilterEvent(FilterEvent.RESET_FILTER));
        onRefresh(null);
      }
      
      protected function onFilterChanged(event:FilterEvent):void
      {
        onRefresh(null);
      }
      
    ]]>
  </fx:Script>

  <s:VGroup width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
    <s:HGroup width="100%">
      <s:Button height="20" label="Reset filters" click="resetFilters(event)" skinClass="it.ht.rcs.console.skins.DeleteButton"/>
      <s:Button height="20" label="Export" skinClass="it.ht.rcs.console.skins.DownloadButton"/>
    </s:HGroup>
    <audit:AuditTable id="grid" width="100%" height="100%" creationComplete="onRefresh(null)" visible="false"/>
  </s:VGroup>
  
</s:Panel>