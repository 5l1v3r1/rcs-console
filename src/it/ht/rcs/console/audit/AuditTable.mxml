<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009"
            xmlns:s="library://ns.adobe.com/flex/spark"
            xmlns:mx="library://ns.adobe.com/flex/mx"
            xmlns:audit="it.ht.rcs.console.audit.*"
            xmlns:filters="it.ht.rcs.console.audit.filters.*">
  
  <fx:Script>
    <![CDATA[
      import mx.events.FlexEvent;
      import mx.rpc.events.HeaderEvent;
      
      [Bindable]
      public var selectedFilter:Object;
      
      [Bindable]
      public var selectableFilters:Object = {actor: ["actor1", "actor2"], action: ["action1", "action2"]};
      
      public function resetFilters():void {
        for (var i:int = 0; i < grid.columns.length; i++) {
          var col:GridColumn = grid.columns.getItemAt(i) as GridColumn;
        }
      }
      
    ]]>
  </fx:Script>
    
  <s:columns>
    <s:ArrayList>
      
      <!--
      <s:GridColumn dataField="time" headerText="Date" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.DateFilterPopup" filter="{outerDocument.selectedFilter}" filterValues="{outerDocument.selectableFilters}" mandatory="true"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      -->
      
      <s:GridColumn dataField="actor" headerText="Actor" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup" filter="{outerDocument.selectedFilter}" selectableFilters="{outerDocument.selectableFilters}" />
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="action" headerText="Action" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup" filter="{outerDocument.selectedFilter}" selectableFilters="{outerDocument.selectableFilters}" />
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <!--
      <s:GridColumn dataField="user" headerText="User" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="group" headerText="Group" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="activity" headerText="Activity" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="target" headerText="Target" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="backdoor" headerText="Backdoor" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.ComboFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      
      <s:GridColumn dataField="desc" headerText="Description" sortable="false">
        <s:headerRenderer>
          <fx:Component>
            <filters:AbstractHeaderRenderer popupFactory="it.ht.rcs.console.audit.filters.TextFilterPopup"/>
          </fx:Component>
        </s:headerRenderer>
      </s:GridColumn>
      -->
      
    </s:ArrayList>
  </s:columns>
  
</s:DataGrid>