<?xml version="1.0" encoding="utf-8"?>
<filters:AbstractFilterPopup xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:xt="library://ns.tink.ws/flex/mx"
                             xmlns:filters="it.ht.rcs.console.audit.filters.*"
                             creationComplete="init(event)">

  <xt:FilterComboBox id="action" width="100" change="action_changeHandler(event)"
                     dataProvider="{events}" styleName="auditFilter" enter="action_enterHandler(event)"/>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.audit.Audit;
      
      import mx.controls.Alert;
      import mx.events.FlexEvent;
      import mx.events.ListEvent;
      
      private function init(event:FlexEvent):void {
        this.firstComponent = action;
      }
      
      protected function action_changeHandler(event:ListEvent):void {
      }
      
      protected function action_enterHandler(event:FlexEvent):void {
        if(action.filteredCollection.length == 1)
          action.dropdown.selectedIndex = 0;
      }
      
      override public function resetFilter():void {
        action.selectedItem = null;
      }
      
      private function syncFilter():void {
        Audit.instance.filterObject.action = action.selectedItem.label.text();
      }
      
    ]]>
  </fx:Script>
  
  <fx:Declarations>
    <fx:XMLList id="events">
      <event><label>ActivityEvent</label></event>
      <event><label>AsyncErrorEvent</label></event>
      <event><label>BrowserInvokeEvent</label></event>
      <event><label>ContextMenuEvent</label></event>
      <event><label>DataEvent</label></event>
      <event><label>DRMAuthenticateEvent</label></event>
      <event><label>DRMAuthenticationCompleteEvent</label></event>
      <event><label>DRMAuthenticationErrorEvent</label></event>
      <event><label>DRMErrorEvent</label></event>
      <event><label>DRMStatusEvent</label></event>
      <event><label>ErrorEvent</label></event>
      <event><label>Event</label></event>
      <event><label>EventDispatcher</label></event>
      <event><label>EventPhase</label></event>
      <event><label>FileListEvent</label></event>
      <event><label>FocusEvent</label></event>
      <event><label>FullScreenEvent</label></event>
      <event><label>HTMLUncaughtScriptExceptionEvent</label></event>
      <event><label>HTTPStatusEvent</label></event>
      <event><label>IMEEvent</label></event>
      <event><label>InvokeEvent</label></event>
      <event><label>IOErrorEvent</label></event>
      <event><label>KeyboardEvent</label></event>
      <event><label>MouseEvent</label></event>
      <event><label>NativeDragEvent</label></event>
      <event><label>NativeWindowBoundsEvent</label></event>
      <event><label>NativeWindowDisplayStateEvent</label></event>
      <event><label>NetStatusEvent</label></event>
      <event><label>OutputProgressEvent</label></event>
      <event><label>ProgressEvent</label></event>
      <event><label>SampleDataEvent</label></event>
      <event><label>ScreenMouseEvent</label></event>
      <event><label>SecurityErrorEvent</label></event>
      <event><label>ShaderEvent</label></event>
      <event><label>SQLErrorEvent</label></event>
      <event><label>SQLEvent</label></event>
      <event><label>SQLUpdateEvent</label></event>
      <event><label>StatusEvent</label></event>
      <event><label>SyncEvent</label></event>
      <event><label>TextEvent</label></event>
      <event><label>TimerEvent</label></event>
    </fx:XMLList>
  </fx:Declarations>

</filters:AbstractFilterPopup>