<?xml version="1.0" encoding="utf-8"?>
<s:List xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        visible="false" minWidth="300" maxWidth="300" maxHeight="222" click="onClick()"
        filters="{[dropShadow]}" hideEffect="{fadeOut}"
        itemRenderer="it.ht.rcs.console.utils.items.SearchListItemRenderer"
        keyDown="onKeyDown(event)" mouseDownOutside="hide()" requireSelection="false"
        showEffect="{fadeIn}">
  
  <fx:Script>
    <![CDATA[
      
      private function onKeyDown(event:KeyboardEvent):void
      {
        if (event.keyCode == Keyboard.ENTER && selectedItem != null)
          dispatchSelectedItemEvent(selectedItem);
      }
      
      private function onClick():void
      {
        if (selectedItem !== undefined)
          dispatchSelectedItemEvent(selectedItem);
      }
      
      private function dispatchSelectedItemEvent(item:Object):void
      {
        var event:ItemEvent = new ItemEvent(ItemEvent.ITEM_SELECTED);
        event.selectedItem = item;
        dispatchEvent(event);
      }
      
      public function hide():void
      {
        visible = includeInLayout = false;
      }
      
      override protected function measure():void
      {
        super.measure();
        measuredHeight = Math.min(maxHeight, 2 + (dataProvider.length * 22));
      }
      
    ]]>
  </fx:Script>
  
  <fx:Declarations>
    <s:Fade id="fadeIn" alphaFrom="0" alphaTo="1" duration="150"/>
    <s:Fade id="fadeOut" alphaFrom="1" alphaTo="0" duration="150"/>
    <s:DropShadowFilter id="dropShadow" alpha=".8" angle="0" blurX="8" blurY="8" color="#666666"
                        distance="0" strength=".8"/>
  </fx:Declarations>
  
</s:List>