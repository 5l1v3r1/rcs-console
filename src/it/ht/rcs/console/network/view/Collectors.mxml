<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          xmlns:view="it.ht.rcs.console.network.view.*"
          top="0" left="5" right="5" bottom="5" contentBackgroundColor="0xeaeaea">

  <s:BorderContainer dropShadowVisible="true" width="100%" height="103">
    <view:CollectorList width="100%" height="101" dataProvider="{listDP}" borderVisible="false"/>
  </s:BorderContainer>
  <s:HGroup width="100%">
    <s:Button label="Health check" skinClass="it.ht.rcs.console.skins.HeartbeatButton"/>
    <s:Button label="Apply" skinClass="it.ht.rcs.console.skins.ApplyButton"/>
  </s:HGroup>
  <s:Scroller id="stageScroller" width="100%" height="100%">
    <view:NetworkStage id="networkStage" rootNode="{rootNode}"/>
  </s:Scroller>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.network.model.Collector;
      import it.ht.rcs.console.network.view.renderers.CollectorRenderer;
      import it.ht.rcs.console.network.view.renderers.DBRenderer;
      
      import mx.collections.ArrayCollection;
      import mx.rpc.events.ResultEvent;
      
      [Bindable]
      private var rootNode:DBRenderer;
      
      [Bindable]
      private var listDP:ArrayCollection;
      
      public function buildGraph(event:ResultEvent):void
      {
        var list:ArrayCollection = event.result as ArrayCollection;
        var nodes:Vector.<CollectorRenderer> = new Vector.<CollectorRenderer>();
        for each (var el:Collector in list)
          nodes.push(new CollectorRenderer(el));
        
        var collectors:Vector.<CollectorRenderer> = new Vector.<CollectorRenderer>();
        
        for each (var node:CollectorRenderer in nodes) {
          if (node.collector.type == 'local')
            collectors.push(node);
          var nextHop:CollectorRenderer = node.collector.next ? getRendererById(node.collector.next[0], nodes) : null;
          node.nextHop = nextHop;
        }
        
        var db:DBRenderer = new DBRenderer();
        db.collectors = collectors;
        rootNode = db;
        
        listDP = list;

        stageScroller.verticalScrollBar.value = stageScroller.verticalScrollBar.maximum;
      }
      
      private function getRendererById(_id:String, list:Vector.<CollectorRenderer>):CollectorRenderer {
        if (_id == null) return null;
        for each (var cr:CollectorRenderer in list)
        if (cr.collector._id == _id)
          return cr;
        return null;
      }

    ]]>
  </fx:Script>
  
</s:VGroup>