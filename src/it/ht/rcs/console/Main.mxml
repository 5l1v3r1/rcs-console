<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:main="it.ht.rcs.console.*"
         xmlns:accounting="it.ht.rcs.console.accounting.view.*"
         xmlns:alerting="it.ht.rcs.console.alerting.view.*"
         xmlns:audit="it.ht.rcs.console.audit.view.*" 
         xmlns:operations="it.ht.rcs.console.operations.*"
         xmlns:correlation="it.ht.rcs.console.correlation.*"
         xmlns:dashboard="it.ht.rcs.console.dashboard.view.*"
         xmlns:monitor="it.ht.rcs.console.monitor.view.*"
         xmlns:system="it.ht.rcs.console.system.view.*" 
         xmlns:home="it.ht.rcs.console.home.view.*"
         width="100%" height="100%" 
         addedToStage="added()"
         removedFromStage="removed()" xmlns:view="it.ht.rcs.console.operations.view.*">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.alert.controller.AlertController;
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.factory.controller.FactoryManager;
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.monitor.controller.MonitorManager;
      import it.ht.rcs.console.operation.controller.OperationManager;
      import it.ht.rcs.console.search.controller.SearchManager;
      import it.ht.rcs.console.target.controller.TargetManager;
      import it.ht.rcs.console.task.controller.DownloadManager;
      
      import mx.core.FlexGlobals;
      import mx.events.ItemClickEvent;
      
      [Bindable]
      private var main_sections:Array;
      
      private function mainButtonClickHandler(event:ItemClickEvent):void 
      {
        trace("SECTION: " + event.label.toUpperCase());
        /* dispatch the event for all */
        var sectionEvent:SectionEvent = new SectionEvent(SectionEvent.CHANGE_SECTION);
        sectionEvent.section = event.label;
        FlexGlobals.topLevelApplication.dispatchEvent(sectionEvent);
      }
      
      private function changeSection(event:SectionEvent):void
      {
        /* change the state to the current section */
        currentState = event.section;
        if (this[event.section].hasOwnProperty('changeSection'))
          this[event.section].changeSection(event);
      }
      
      private function added():void
      {
        trace("Entering main section...");
        
        FlexGlobals.topLevelApplication.addEventListener(SectionEvent.CHANGE_SECTION, changeSection);
        
        /* different view based on privileges */
        main_sections = new Array();
        if (Console.currentSession.user.is_admin()) main_sections.push('Accounting');
        if (Console.currentSession.user.is_admin() || Console.currentSession.user.is_tech() || Console.currentSession.user.is_view()) main_sections.push('Operations');
        if (Console.currentSession.user.is_view()) main_sections.push('Dashboard');
        if (Console.currentSession.user.is_view()) main_sections.push('Alerting');
        //if (console.currentSession.user.is_view()) main_sections.push('Correlation');
        if (Console.currentSession.user.is_sys() || Console.currentSession.user.is_tech()) main_sections.push('System');
        if (Console.currentSession.user.is_admin()) main_sections.push('Audit');
        if (Console.currentSession.user.is_admin() || Console.currentSession.user.is_sys()) main_sections.push('Monitor');

        /* initialize the managers */

        if (Console.currentSession.user.is_admin() || Console.currentSession.user.is_tech() || Console.currentSession.user.is_view()) {
          SearchManager.instance.start();
          OperationManager.instance.refresh();
          TargetManager.instance.refresh();
        }

        if (Console.currentSession.user.is_tech() || Console.currentSession.user.is_view()) {
          AgentManager.instance.refresh();
          FactoryManager.instance.refresh();
        }
        
        if (Console.currentSession.user.is_admin() || Console.currentSession.user.is_sys()) {
          MonitorManager.instance.start_counters();        
        }
        
        if (Console.currentSession.user.is_view()) {
          AlertController.instance.start_counters();
        }
                
        if (Console.currentSession.user.is_any()) {
          DownloadManager.instance.start();
          LicenseManager.instance.start();
          SearchManager.instance.start();
        }

        currentState = "Home";
      }
      
      private function removed():void 
      {
        trace("Exiting main section...");
        
        FlexGlobals.topLevelApplication.removeEventListener(SectionEvent.CHANGE_SECTION, changeSection);
  
        /* stop the managers */
        MonitorManager.instance.stop_counters();
        AlertController.instance.stop_counters();
        DownloadManager.instance.stop();
        LicenseManager.instance.stop();
        SearchManager.instance.stop();
      }
    ]]>
  </fx:Script>
  
  <s:states>
    <s:State name="Home"/>
    <s:State name="Accounting"/>
    <s:State name="Operations"/>
    <s:State name="Dashboard"/>
    <s:State name="Alerting"/>
    <s:State name="Correlation"/>
    <s:State name="System"/>
    <s:State name="Audit"/>
    <s:State name="Monitor"/>
  </s:states>

  <!-- title bar (the banner) -->
  <main:TitleBar id="titleBar"/>
  
  <!-- tool bar on top -->
  <main:ButtonBar id="mainButtonBar" top="50" left="10" />
  <mx:ToggleButtonBar id="sectionsButtonBar" top="50" right="10" height="20" horizontalGap="10" buttonWidth="80" dataProvider="{main_sections}"
                      itemClick="mainButtonClickHandler(event);" selectedIndex="{main_sections.indexOf(currentState)}"/>
  
  <!-- all the sections -->
  <accounting:AccountingSection id="Accounting" includeIn="Accounting" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <view:OperationsSection id="Operations" includeIn="Operations" height="100%" top="75" left="0" right="0" bottom="0"/>

  <dashboard:DashboardSection id="Dashboard" includeIn="Dashboard" height="100%" top="75" left="0" right="0" bottom="0"/>

  <correlation:CorrelationSection id="Correlation" includeIn="Correlation" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <system:SystemSection id="System" includeIn="System" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <alerting:AlertingSection id="Alerting" includeIn="Alerting" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <audit:AuditSection id="Audit" includeIn="Audit" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <monitor:MonitorSection id="Monitor" includeIn="Monitor" height="100%" top="75" left="0" right="0" bottom="0"/>
  
  <home:HomeSection id="Home" includeIn="Home" height="100%" top="75" left="0" right="0" bottom="0"/>
    
</s:Group>