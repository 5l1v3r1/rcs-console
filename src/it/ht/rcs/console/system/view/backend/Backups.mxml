<?xml version="1.0" encoding="utf-8"?>
<mx:TabNavigator xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" addedToStage="onAddedToStage(event)"
         removedFromStage="onRemovedFromStage(event)" contentBackgroundAlpha="0" borderVisible="false"
         width="100%" height="250" xmlns:backups="it.ht.rcs.console.system.view.backend.backups.*" xmlns:backend="it.ht.rcs.console.system.view.backend.*" xmlns:jobs="it.ht.rcs.console.system.view.backend.backups.jobs.*" xmlns:archives="it.ht.rcs.console.system.view.backend.backups.archives.*">

  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.backup.controller.BackupArchiveManager;
      import it.ht.rcs.console.backup.controller.BackupJobManager;
      import it.ht.rcs.console.backup.model.BackupArchive;
      import it.ht.rcs.console.backup.model.BackupJob;
      import it.ht.rcs.console.system.view.backend.backups.jobs.BackupJobEdit;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.collections.ListCollectionView;
      import mx.events.CloseEvent;
      import mx.managers.PopUpManager;
      

      [Bindable]
      private var _backup_job_view:ListCollectionView;
      [Bindable]
      private var _backup_archive_view:ListCollectionView;
      
      private function onAddedToStage(event:Event):void
      {
        BackupJobManager.instance.listenRefresh();
        BackupJobManager.instance.refresh();
        BackupArchiveManager.instance.listenRefresh();
        _backup_job_view = BackupJobManager.instance.getView(); 
        _backup_archive_view = BackupArchiveManager.instance.getView(); 
        
      }
      
      private function onRemovedFromStage(event:Event):void
      {
        BackupJobManager.instance.unlistenRefresh();
        _backup_job_view = null;
        BackupArchiveManager.instance.unlistenRefresh();
        _backup_archive_view = null;
      }
      
      private function addJob():void
      {
        BackupJobManager.instance.newJob(function onSuccess(j:BackupJob):void {
          selectJob(j);
          editJob(j);
        });
      }
      
      private function selectJob(j:BackupJob):void
      {
        backupjobs.selectedItem = j;
      }
      
      private function editJob(j:BackupJob):void
      {
        var ej:BackupJobEdit = PopUpManager.createPopUp(root, BackupJobEdit, true) as BackupJobEdit;
        ej.job = j;
        PopUpManager.centerPopUp(ej);
      }
      
      private function deleteJob(j:BackupJob):void
      {
        if (j == null)
          return;
        
        BackupJobManager.instance.removeItem(j);
      }
      
      private function runJob(j:BackupJob):void
      {
        if (j == null)
          return;
        
        BackupJobManager.instance.runJob(j, function (j:BackupJob):void {
          BackupJobManager.instance.refresh();
        });
      }
      
      private function restoreArchive(a:BackupArchive):void
      {
        if (a == null)
          return;
        
        AlertPopUp.show(R.get('CONFIRM_BACKUP_RESTORE', [a.name]), R.get('CONFIRM'), AlertPopUp.YES|AlertPopUp.NO, null,
          function(e:CloseEvent):void {
            if (e.detail == AlertPopUp.YES) 
              BackupArchiveManager.instance.restoreArchive(a, false);
          }, null, AlertPopUp.NO);
      }
      
      private function deleteArchive(a:BackupArchive):void
      {
        if (a == null)
          return;
        
        AlertPopUp.show(R.get('CONFIRM_BACKUP_DELETION', [a.name]), R.get('CONFIRM'), AlertPopUp.YES|AlertPopUp.NO, null,
          function(e:CloseEvent):void {
            if (e.detail == AlertPopUp.YES) 
              BackupArchiveManager.instance.removeItem(a);
          }, null, AlertPopUp.NO);
      }
    ]]>
  </fx:Script>
  
  <s:NavigatorContent label="{R.get('BACKUP_JOBS')}">
    <s:VGroup width="100%" height="100%">
      <jobs:JobsActionBar/>
      
      <jobs:BackupJobs id="backupjobs" dataProvider="{_backup_job_view}"
                          doubleClick="editJob(backupjobs.selectedItem as BackupJob)"
                          doubleClickEnabled="true"/>
    </s:VGroup>
  </s:NavigatorContent>
  
  <s:NavigatorContent label="{R.get('BACKUP_ARCHIVE')}">
    <s:VGroup width="100%" height="100%">
      <backend:ArchivesActionBar/>
      
      <archives:BackupArchives id="backuparchives" dataProvider="{_backup_archive_view}"/>
    </s:VGroup>
  </s:NavigatorContent>
  
</mx:TabNavigator>