<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          xmlns:backend="it.ht.rcs.console.system.view.backend.*"
          left="5" right="5" top="0" bottom="5" addedToStage="onAddedToStage(event)"
          removedFromStage="onRemovedFromStage(event)">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.DataLoadedEvent;
      import it.ht.rcs.console.events.RefreshEvent;
      import it.ht.rcs.console.shard.controller.ShardManager;
      import it.ht.rcs.console.shard.model.Shard;
      import it.ht.rcs.console.system.view.backend.renderers.DBRenderer;
      import it.ht.rcs.console.system.view.backend.renderers.ShardRenderer;
      
      import mx.collections.ListCollectionView;
      import mx.collections.Sort;
      import mx.collections.SortField;
      import mx.core.FlexGlobals;
      
      
      [Bindable]
      private var _shard_view:ListCollectionView;
      
      [Bindable]
      private var rootNode:DBRenderer;
      
      private function onAddedToStage(event:Event):void
      {
        ShardManager.instance.addEventListener(DataLoadedEvent.DATA_LOADED, onDataLoaded);
        ShardManager.instance.start();
      }
      
      private function onRemovedFromStage(event:Event):void
      {
        ShardManager.instance.removeEventListener(DataLoadedEvent.DATA_LOADED, onDataLoaded);
        ShardManager.instance.stop();
        _shard_view = null;
      }
      
      private function onDataLoaded(event:DataLoadedEvent):void
      {
        if (_shard_view == null) {
          var sort:Sort = new Sort();
          sort.fields = [new SortField('_id', true, false, false)];
          _shard_view = ShardManager.instance.getView(sort);
        }
        buildGraph();
      }
      
      public function buildGraph():void
      {
        var shards:Vector.<ShardRenderer> = new Vector.<ShardRenderer>();
        for each (var el:Shard in _shard_view) {
          var sr:ShardRenderer = new ShardRenderer();
          sr.shard = el;
          shards.push(sr);
        }
        
        var db:DBRenderer = new DBRenderer();
        db.shards = shards;
        rootNode = db;
      }
      
    ]]>
  </fx:Script>
  
  <s:Scroller id="stageScroller" width="100%" height="100%">
    <backend:BackendGraph id="backendGraph" rootNode="{rootNode}"/>
  </s:Scroller>
  
  <s:DataGrid width="100%" height="300">
    
  </s:DataGrid>
  
</s:VGroup>