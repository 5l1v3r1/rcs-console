<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                autoDrawBackground="true" creationComplete="init()" doubleClick="edit()"
                doubleClickEnabled="true">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.network.model.Collector;
      import it.ht.rcs.console.system.view.frontend.renderers.CollectorRenderer;
      
      import locale.R;
      
      import mx.core.DragSource;
      import mx.managers.DragManager;
      import mx.managers.PopUpManager;

      [Bindable]
      private var linked:Boolean;
      
      private function init():void {
        addEventListener(MouseEvent.MOUSE_DOWN, mouseDown);
      }
      
      override public function set data(value:Object):void
      {
        super.data = value;
        if (!data)
          return;
        
        var tt:String = '';
        var c:Collector = value as Collector;
        if (c.type == 'remote' && c.prev[0] == null && c.next[0] == null) {
          tt = R.get('NODE_NOT_ATTACHED');
          linked = false;
        } else {
          linked = true;
        }

//        if (c.type == 'remote')
//          currentState = 'remote';
//        else if (c.type == 'local')
//          currentState = 'local';
        currentState = c.type;
        
        toolTip = tt;
        this.buttonMode = data.type == 'remote';
      }
      
      private function mouseDown(event:MouseEvent):void
      {
        if (data.type == 'remote' && data.prev[0] == null && data.next[0] == null)
        {
          var dragInitiator:CollectorListRenderer = event.currentTarget as CollectorListRenderer;
          var dragSource:DragSource = new DragSource();
          var proxy:CollectorRenderer = new CollectorRenderer(data as Collector);
          var offset:int = event.target === bottomLabel ? 70 : 0;
          DragManager.doDrag(dragInitiator, dragSource, event, proxy, event.localX, event.localY + offset);
        }
      }
      
      private function edit():void
      {
        var popup:EditCollectorForm = PopUpManager.createPopUp(this.parentDocument as DisplayObject, EditCollectorForm, true) as EditCollectorForm;
        popup.collector = data as Collector;
        PopUpManager.centerPopUp(popup);
      }
    ]]>
  </fx:Script>
  
  <s:states>
    <s:State name="local"/>
    <s:State name="remote"/>
  </s:states>
  
  <s:SkinnableContainer width="70">
    <mx:Image top="5" width="70" height="60" source.local="img/items/collector.png" source.remote="img/items/anonymizer.png"/>
    <mx:Image top="5" width="70" height="60" source="img/items/linked.png" visible="{linked}"/>
    <s:Label id="bottomLabel" top="72" width="70" paddingBottom="5" text="{data.name}" textAlign="center"/>
  </s:SkinnableContainer>
  
</s:ItemRenderer>