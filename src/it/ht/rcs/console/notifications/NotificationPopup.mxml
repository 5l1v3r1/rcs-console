<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:mx="library://ns.adobe.com/flex/mx"
                   width="280" height="80" addedEffect="{fadeIn}" addedToStage="onAddedToStage()"
                   backgroundAlpha=".80" backgroundColor="#333333" click="onClick()"
                   cornerRadius="10" creationPolicy="all" removedEffect="{fadeOut}"
                   removedFromStage="onRemovedFromStage()">

  <s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
    <s:RichText id="message" color="#ffffff" fontFamily="Myriad" fontSize="16" lineHeight="18"/>
  </s:HGroup>
  
  <fx:Script>
    <![CDATA[
      import flashx.textLayout.conversion.TextConverter;
      
      import it.ht.rcs.console.events.SessionEvent;
      
      import mx.core.FlexGlobals;
      import mx.managers.PopUpManager;
      
      protected function onClick():void
      {
        PopUpManager.removePopUp(this);
      }
      
      public static function showNotification(message:String):void
      {
        var popup:NotificationPopup = new NotificationPopup();
        popup.adjustPosition();
        PopUpManager.addPopUp(popup, FlexGlobals.topLevelApplication as DisplayObject, false);
        popup.message.textFlow = TextConverter.importToFlow(message, TextConverter.TEXT_FIELD_HTML_FORMAT);
      }
      
      private function onAddedToStage():void
      {
        FlexGlobals.topLevelApplication.addEventListener(SessionEvent.LOGOUT, doHide);
        NativeApplication.nativeApplication.activeWindow.addEventListener(Event.RESIZE, adjustPosition);
      }
      
      private function onRemovedFromStage():void
      {
        FlexGlobals.topLevelApplication.removeEventListener(SessionEvent.LOGOUT, doHide);
        NativeApplication.nativeApplication.activeWindow.removeEventListener(Event.RESIZE, adjustPosition);
      }
      
      private function adjustPosition(event:Event=null):void {
        this.x = NativeApplication.nativeApplication.activeWindow.width / 2 - this.width / 2;
        this.y = FlexGlobals.topLevelApplication.height - this.height - 40;
      }
      
      private function doHide(event:Event=null):void {
        PopUpManager.removePopUp(this);
      }
      
    ]]>
  </fx:Script>
  
  <fx:Declarations>
    <s:Parallel id="fadeIn">
      <s:Fade alphaFrom="0" alphaTo="1" duration="200"/>
      <s:Move duration="200" yFrom="{this.y + 50}" yTo="{this.y}"/>
    </s:Parallel>
    <s:Parallel id="fadeOut">
      <s:Fade alphaFrom="1" alphaTo="0" duration="200"/>
      <s:Move duration="200" yFrom="{this.y}" yTo="{this.y - 50}"/>
    </s:Parallel>
  </fx:Declarations>
  


</s:BorderContainer>
