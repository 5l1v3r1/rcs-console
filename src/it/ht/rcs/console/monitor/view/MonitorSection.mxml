<?xml version="1.0" encoding="utf-8"?>
<main:Section xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:mx="library://ns.adobe.com/flex/mx"
              xmlns:main="it.ht.rcs.console.main.*"
              xmlns:monitor="it.ht.rcs.console.monitor.view.*"
              addedToStage="added()" removedFromStage="removed()">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.monitor.controller.MonitorManager;
      
      import mx.collections.ListCollectionView;
      import mx.collections.Sort;
      import mx.collections.SortField;
      import mx.managers.PopUpManager;
      
      [Bindable]
      private var _status_view:ListCollectionView;
      
      private function added():void
      {
        LicenseManager.instance.listenRefresh();
        /* start the auto refresh when the section is open */
        MonitorManager.instance.listenRefresh();
        MonitorManager.instance.refresh();
        
        /* default sorting: status */
        var sort:Sort = new Sort();
        sort.fields = [new SortField('status', true, true, true)];        
        _status_view = MonitorManager.instance.getView(sort);
      }
      
      private function removed():void
      {
        LicenseManager.instance.unlistenRefresh();
        /* stop the auto refresh when going away */
        MonitorManager.instance.unlistenRefresh();
      }
      
      private function showAlertingGroup():void
      {
        PopUpManager.centerPopUp(PopUpManager.createPopUp(root, AlertingGroup, true));
      }
      
      private function sort_by_status():void
      {
        var sort:Sort = new Sort();
        sort.fields = [new SortField('status', true, true, true)];
        _status_view.sort = sort;
        _status_view.refresh();
      }

      private function sort_by_name():void
      {
        var sort:Sort = new Sort();
        sort.fields = [new SortField('name', true, false, false)];
        _status_view.sort = sort;
        _status_view.refresh();
      }
    ]]>
  </fx:Script>
  
  <!-- sidebar -->
  <mx:Accordion left="5" top="5" bottom="5" width="200">
    <s:NavigatorContent width="100%" height="100%"
                        label="{resourceManager.getString('localized_main', 'LICENSE')}">
      <monitor:LicenseView/>
    </s:NavigatorContent>
    <s:NavigatorContent width="100%" height="100%"
                        label="{resourceManager.getString('localized_main', 'LICENSE_VERSIONS')}">
      <monitor:VersionsView/>
    </s:NavigatorContent>
  </mx:Accordion>
  
  <!-- button bar (transparent container) -->  
  <s:BorderContainer left="215" right="5" top="5" height="20" backgroundAlpha="0.0"
                     borderVisible="false">
    <s:Button x="0" y="0" width="30" height="20" label="S" click="sort_by_status()"
              skinClass="it.ht.rcs.console.skins.SortButton"
              toolTip="{resourceManager.getString('localized_main', 'SORT_BY_STATUS')}"/>
    <s:Button x="40" y="0" width="30" height="20" label="S" click="sort_by_name()"
              skinClass="it.ht.rcs.console.skins.SortNameButton"
              toolTip="{resourceManager.getString('localized_main', 'SORT_BY_NAME')}"/>
    <s:Button visible="{Console.currentSession.user.is_sys()}" x="130" y="0" width="30" height="20"
              label="G" click="showAlertingGroup()"
              skinClass="it.ht.rcs.console.skins.ContactButton"
              toolTip="{resourceManager.getString('localized_main', 'SELECT_ALERTING_GROUP')}"/>
  </s:BorderContainer>

  <!-- monitor list -->
  <s:List id="monitors" left="215" right="5" top="30" bottom="5"
          click="{monitors.selectedIndex = -1}" dataProvider="{_status_view}"
          itemRenderer="it.ht.rcs.console.monitor.view.MonitorRenderer"/>
  
</main:Section>