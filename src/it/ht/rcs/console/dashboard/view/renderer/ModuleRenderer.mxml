<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                xmlns:renderer="it.ht.rcs.console.dashboard.view.renderer.*"
                autoDrawBackground="false" buttonMode="true" doubleClick="onDoubleClick(event)"
                doubleClickEnabled="true" toolTip="{data.type}">
  
  <s:layout>
    <s:VerticalLayout gap="8" horizontalAlign="center" paddingBottom="10" paddingLeft="10"
                      paddingRight="10" paddingTop="10" verticalAlign="top"/>
  </s:layout>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.operations.view.configuration.advanced.renderers.ModuleIcons;
      import it.ht.rcs.console.search.controller.SearchManager;
      
      import mx.core.FlexGlobals;
      
      override public function set data(value:Object):void
      {
        super.data = value;
        icon.source = data ? ModuleIcons[data.type] : null;
        toolTip = data ? data.type : null;
      }
      
      private function onDoubleClick(e:MouseEvent):void
      {
        var event:SectionEvent = new SectionEvent(SectionEvent.CHANGE_SECTION);
        event.section = SectionEvent.OPERATIONS;
        event.item = SearchManager.instance.getItem(this.parentDocument.hostComponent.itemId);
        event.evidenceType = data.type;
        FlexGlobals.topLevelApplication.dispatchEvent(event);
      }
    ]]>
  </fx:Script>
  
  <s:BorderContainer width="50" height="50" borderColor="#dddddd" cornerRadius="10">
    
    <s:BitmapImage id="icon" width="36" height="36" horizontalCenter="0" smooth="true"
                   verticalCenter="0"/>
    
    <renderer:CounterBaloon visible="{data.sync != 0}" right="-6" top="-8" style="red"
                            value="{data.sync}"/>
    <renderer:CounterBaloon visible="{data.tot != 0}" right="-6" bottom="-8" style="white"
                            value="{data.tot}"/>
    
  </s:BorderContainer>
  
</s:ItemRenderer>