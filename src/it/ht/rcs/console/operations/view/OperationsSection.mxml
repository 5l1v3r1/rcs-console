<?xml version="1.0" encoding="utf-8"?>
<main:Section xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:mx="library://ns.adobe.com/flex/mx"
              xmlns:main="it.ht.rcs.console.main.*"
              xmlns:operations="it.ht.rcs.console.operations.view.operations.*"
              xmlns:targets="it.ht.rcs.console.operations.view.targets.*"
              xmlns:agents="it.ht.rcs.console.operations.view.agents.*"
              xmlns:configuration="it.ht.rcs.console.operations.view.configuration.*"
              xmlns:evidences="it.ht.rcs.console.operations.view.evidences.*"
              xmlns:view="it.ht.rcs.console.operations.view.*"
              addedToStage="onAddedToStage(event)" creationComplete="init()"
              removedFromStage="onRemovedFromStage(event)">
  
  
  <main:states>    
    <s:State name="allOperations"/>
    <s:State name="singleOperation"/>
    
    <s:State name="allTargets"/>
    <s:State name="singleTarget"/>
    
    <s:State name="allAgents"/>
    <s:State name="singleAgent"/>
    <s:State name="singleAgentConfig"/>
    
    <s:State name="configuration"/>
    
    <s:State name="evidences"/>
  </main:states>
  
  
  <main:layout>
    <s:VerticalLayout gap="5" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
  </main:layout>
  
  
  <view:Breadcrumb section="{this}"/>
  
  <operations:OperationsView includeIn="allOperations" section="{this}"/>
  
  <targets:TargetsView includeIn="singleOperation,allTargets" section="{this}"/>
  
  <agents:AgentsView includeIn="singleTarget,allAgents,singleAgent" section="{this}"/>
  
  <agents:AgentsConfigListView includeIn="singleAgentConfig" section="{this}"/>
  
  <configuration:ConfigurationView includeIn="configuration" section="{this}"/>
  
  <evidences:EvidencesView includeIn="evidences" section="{this}"/>
  
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.events.RefreshEvent;
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.operation.controller.OperationManager;
      import it.ht.rcs.console.target.controller.TargetManager;
      
      import mx.core.FlexGlobals;
      
      [Bindable]
      public var stateManager:OperationsSectionStateManager;
      
      private var itemToSelect:Object = null;
      private function init():void
      {
        stateManager = new OperationsSectionStateManager(this);
        
        if (itemToSelect)
          stateManager.manageItemSelection(itemToSelect);
        else
          stateManager.setState('allOperations');
      }
      
      private function onAddedToStage(event:Event):void
      {
        FlexGlobals.topLevelApplication.addEventListener(RefreshEvent.REFRESH, onRefresh);
      }
      
      private function onRemovedFromStage(event:Event):void
      {
        FlexGlobals.topLevelApplication.removeEventListener(RefreshEvent.REFRESH, onRefresh);
      }
      
      private function onRefresh(event:RefreshEvent):void
      {
        stateManager.setState(currentState);
      }
      
      public function changeSection(event:SectionEvent):void
      {
        if (!event.item) { return };
        
        var item:* = null;
        switch (event.item._kind) {
          case 'operation':
            item = OperationManager.instance.getItem(event.item._id);
            break;
          case 'target':
            item = TargetManager.instance.getItem(event.item._id);
            break;
          case 'agent':
            item = AgentManager.instance.getItem(event.item._id);
            break;
          default:
            break;
        }
        
        // This method is called before init if we never entered the operation section,
        // so we check if the stateManager is present, otherwise we delay the item selection
        if (stateManager)
          stateManager.manageItemSelection(item);
        else
          itemToSelect = item;
      }
    ]]>
  </fx:Script>
  
</main:Section>