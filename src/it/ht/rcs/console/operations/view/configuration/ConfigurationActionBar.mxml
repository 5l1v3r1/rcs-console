<?xml version="1.0" encoding="utf-8"?>
<actionbar:ActionBar xmlns:fx="http://ns.adobe.com/mxml/2009"
                     xmlns:s="library://ns.adobe.com/flex/spark"
                     xmlns:mx="library://ns.adobe.com/flex/mx"
                     xmlns:actionbar="it.ht.rcs.console.main.actionbar.*"
                     addedToStage="onAddedToStage(event)">

  <!--s:Button label="New" icon="@Embed('/img/windows/user2.png')"/-->
  
  <s:Button label="Save" click="onSave()" icon="@Embed('/img/windows/user2.png')"/>
  
  <actionbar:Separator/>
  
  <!--s:Button label="Load Template" icon="@Embed('/img/windows/user2.png')"/>
  <s:Button label="Save Template" icon="@Embed('/img/windows/user2.png')"/-->  
  <s:Button label="Export" click="save(event)" icon="@Embed('/img/NEW/export.png')"/>
  
  <actionbar:Separator/>
  
  <s:Button label="Build" click="build(event)" icon="@Embed('/img/windows/user2.png')"/>
  
  <s:HGroup visible="{configView.currentState == 'advanced'}">
    <actionbar:Separator/>
    
    <s:Button label="Add Event" click="addEvent(event)" icon="@Embed('/img/windows/user2.png')"/>
    <s:Button label="Add Action" click="addAction(event)" icon="@Embed('/img/windows/user2.png')"/>
    
    <actionbar:Separator/>
    
    <s:Button label="Edit Globals" click="editGlobals(event)" icon="@Embed('/img/windows/user2.png')"/>
  </s:HGroup>
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.operations.view.agents.build.BuildForm;
      import it.ht.rcs.console.operations.view.configuration.advanced.forms.globals.GlobalsForm;
      
      import mx.managers.PopUpManager;
      
      public var section:OperationsSection;
      [Bindable]
      public var configView:ConfigurationView;
      
      private function build(event:MouseEvent):void
      {
        var b:BuildForm = PopUpManager.createPopUp(root, BuildForm, true) as BuildForm;
        b.factory = section.stateManager.selectedFactory;
        PopUpManager.centerPopUp(b);
      }
      
      private function onAddedToStage(event:Event):void
      {
        configView = parent as ConfigurationView;
      }
      
      private function onSave():void
      {
        var config:Object = configView.currentState == 'advanced' ? configView.advanced.getConfig() : configView.basic.getConfig();
        AgentManager.instance.addConfig(configView.section.stateManager.selectedFactory, JSON.stringify(config));
      }
      
      protected function save(event:MouseEvent):void
      {
        var file:File = File.desktopDirectory.resolvePath("config.txt");
        var fileStream:FileStream = new FileStream();
        fileStream.open(file, FileMode.WRITE);
        //fileStream.writeUTF("asdasdasd");
        fileStream.writeUTFBytes(PrettyPrinter.prettyPrint(configView.configAsObject));
        fileStream.close();
      }
      
      protected function addAction(event:MouseEvent):void
      {
        // TODO Auto-generated method stub
        configView.advanced.addAction(null);
      }
      
      protected function addEvent(event:MouseEvent):void
      {
        // TODO Auto-generated method stub
        configView.advanced.addEvent(null);
      }
      
      protected function editGlobals(event:MouseEvent):void
      {
        var popup:GlobalsForm = PopUpManager.createPopUp(root, GlobalsForm, true) as GlobalsForm;
        popup.globals = configView.configAsObject.globals;
        PopUpManager.centerPopUp(popup);
      }
      
    ]]>
  </fx:Script>
  
</actionbar:ActionBar>