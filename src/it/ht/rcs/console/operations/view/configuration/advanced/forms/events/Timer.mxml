<?xml version="1.0" encoding="utf-8"?>
<events:EventFields xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:events="it.ht.rcs.console.operations.view.configuration.advanced.forms.events.*"
                    creationComplete="init()">
  
  <fx:Script>
    <![CDATA[
      import mx.collections.ArrayCollection;
      import mx.formatters.DateFormatter;
      import mx.managers.PopUpManager;
      
      import spark.events.IndexChangeEvent;
      
      private var formatter:DateFormatter;
      
      private function init():void
      {
        formatter = new DateFormatter();
        formatter.formatString = 'YYYY-MM-DD JJ:NN:SS';
        
        currentState = event.hasOwnProperty('subtype') ? event.subtype : event.event;
        
        for each (var key:String in ArrayCollection(type.dataProvider).source)
          if (key.toLowerCase().indexOf(currentState) != -1)
            type.selectedItem = key;
        
        switch (currentState) {
          case 'daily':
            dailyFrom.time = event.ts;
            dailyTo.time = event.te;
            break;
          case 'date':
            dateToTime.time = event.te;
            forever.selected = !event.dateto;
            break;
          case 'afterinst':
            days.text = event.days;
            break;
          default:
            break;
        }
      }
      
      override public function commit():void
      {
        event.subtype = currentState;
        switch (currentState) {
          case 'loop':
            event.ts = '00:00:00';
            event.te = '23:59:59';
            break;
          case 'daily':
            event.ts = dailyFrom.time;
            event.te = dailyTo.time;
            break;
          case 'date':
            event.datefrom = formatter.format(dateFromDate.selectedDate);
            if (forever.selected)
              delete(event.dateto);
            else {
              //event.dateto = formatter.
            }
            //event.ts = from.time;
            //event.dateto
            //event.te = to.time;
            break;
          case 'afterinst':
            event.days = days.text;
            break;
          default:
            break;
        }
      }
      
      private function onChange(event:IndexChangeEvent):void
      {
        currentState = states[type.selectedIndex].name;
        PopUpManager.centerPopUp(parentDocument.hostComponent.parent.parentDocument.hostComponent as EventForm); // I know...
      }
    ]]>
  </fx:Script>
  
  <events:states>
    <s:State name="loop"/>
    <s:State name="daily"/>
    <s:State name="date"/>
    <s:State name="afterinst"/>
  </events:states>
  
  <s:Label width="280" text="Timer start action will fire every tot..."/>
  
  <s:Form>
  
    <s:FormItem label="Type">
      <s:DropDownList id="type" width="126" change="onChange(event)" requireSelection="true">
        <s:dataProvider>
          <s:ArrayCollection>
            <fx:String>Loop</fx:String>
            <fx:String>Daily</fx:String>
            <fx:String>Date</fx:String>
            <fx:String>AfterInst</fx:String>
          </s:ArrayCollection>
        </s:dataProvider>
      </s:DropDownList>
    </s:FormItem>
    
    
    <s:FormItem includeIn="daily" label="From">
      <events:TimeField id="dailyFrom"/>
    </s:FormItem>
    
    <s:FormItem includeIn="daily" label="To">
      <events:TimeField id="dailyTo"/>
    </s:FormItem>
    
    
    <s:FormItem includeIn="date" label="From">
      <s:VGroup>
        <mx:DateField id="dateFromDate" width="150" formatString="YYYY-MM-DD" showToday="true"
                      yearNavigationEnabled="true"/>
        <events:TimeField id="dateFromTime"/>
      </s:VGroup>
    </s:FormItem>
    
    <s:FormItem includeIn="date" label="To">
      <s:VGroup>
        <s:RadioButton id="forever" label="Forever" group="{dateGroup}" selected="true"/>
        <s:RadioButton label="Date" group="{dateGroup}"/>
        <mx:DateField id="dateToDate" width="150" enabled="{!forever.selected}"
                      formatString="YYYY-MM-DD" showToday="true" yearNavigationEnabled="true"/>
        <events:TimeField id="dateToTime" enabled="{!forever.selected}"/>
      </s:VGroup>
    </s:FormItem>
    
    
    <s:FormItem includeIn="afterinst" label="Days">
      <s:TextInput id="days" restrict="0-9" textAlign="center" widthInChars="3"/>
    </s:FormItem>
    
    
  </s:Form>
  
  <fx:Declarations>
    <s:RadioButtonGroup id="dateGroup"/>
  </fx:Declarations>
  
</events:EventFields>