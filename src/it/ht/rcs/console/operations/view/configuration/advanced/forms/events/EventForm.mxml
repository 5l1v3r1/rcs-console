<?xml version="1.0" encoding="utf-8"?>
<utils:TitleWindowSaveCancel xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:utils="it.ht.rcs.console.utils.*"
                             xmlns:events="it.ht.rcs.console.operations.view.configuration.advanced.forms.events.*"
                             creationComplete="init()" save="save()" title="Edit Event">
  
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.operations.view.configuration.advanced.ConfigurationGraph;
      
      import locale.R;
      
      import mx.managers.PopUpManager;
      
      import spark.events.IndexChangeEvent;
      
      public var event:Object;
      public var graph:ConfigurationGraph;
      
      public var currentData:EventFields;
      
      private function init():void
      {
        eventEnabled.selected = event.enabled;
        desc.text = event.desc;

        for each (var o:Object in ArrayCollection(type.dataProvider).source)
          if (o.label.toLowerCase() == event.event.toLowerCase())
            type.selectedItem = o;
        
        currentState = event.event;
        switchView();
        
        desc.setFocus();
        desc.selectAll();
      }
      
      private function onChange(e:IndexChangeEvent):void
      {
        currentState = type.selectedItem.label.toLowerCase();
        switchView();
      }
      
      private function switchView():void
      {
        if (['timer', 'date', 'afterinst'].indexOf(currentState) != -1)
          currentData = timer;
        else
          currentData = this[currentState] as EventFields;
        
        currentData.event = event;
        PopUpManager.centerPopUp(this);
      }
      
      private function save():void
      {
        event.enabled = eventEnabled.selected;
        event.desc = desc.text;
        event.event = currentState;
        Cleaner.clean(event);
        currentData.commit();
        close();
        graph.rebuildGraph();
      }
      
      private function eventFilterFunction(o:Object):Boolean
      {
        return o.type.indexOf(graph.config.globals.type.toLowerCase()) != -1;
      }
    ]]>
  </fx:Script>
  
  <utils:states>
    <s:State name="none"/>
    <s:State name="afterinst"/>
    <s:State name="connection"/>
    <s:State name="date"/>
    <s:State name="process"/>
    <s:State name="quota"/>
    <s:State name="screensaver"/>
    <s:State name="timer"/>
    <s:State name="winevent"/>
    <s:State name="ac"/>
    <s:State name="battery"/>
    <s:State name="call"/>
    <s:State name="position"/>
    <s:State name="standby"/>
    <s:State name="sms"/>
    <s:State name="window"/>
  </utils:states>
  
  <utils:layout>
    <s:VerticalLayout paddingBottom="2" paddingLeft="2" paddingRight="10" paddingTop="2"/>
  </utils:layout>
  
  <s:Form defaultButton="{saveButton}">

    <s:FormItem label="Enabled">
      <s:CheckBox id="eventEnabled"/>
    </s:FormItem>
    
    <s:FormItem label="{R.get('NAME')}">
      <s:TextInput id="desc" width="160"/>
    </s:FormItem>
    
    <s:FormItem label="Type">
    
      <s:DropDownList id="type" width="160" change="onChange(event)" requireSelection="true" labelField="label">
        <s:dataProvider>
          <s:ArrayCollection>
            <fx:Object label="Connection"  type="mobile,desktop"/>
            <fx:Object label="Process"     type="mobile,desktop"/>
            <fx:Object label="Quota"       type="mobile,desktop"/>
            <fx:Object label="Screensaver" type="desktop"/>
            <fx:Object label="Timer"       type="mobile,desktop"/>
            <fx:Object label="WinEvent"    type="mobile,desktop"/>
            <fx:Object label="Window"      type="mobile,desktop"/>
            <fx:Object label="AC"          type="mobile"/>
            <fx:Object label="Battery"     type="mobile"/>
            <fx:Object label="Call"        type="mobile"/>
            <fx:Object label="Position"    type="mobile"/>
            <fx:Object label="SimChange"   type="mobile"/>
            <fx:Object label="Standby"     type="mobile"/>
            <fx:Object label="Sms"         type="mobile"/>
          </s:ArrayCollection>
        </s:dataProvider>
      </s:DropDownList>
    
    </s:FormItem>
    
    <s:Spacer height="20"/>
    
    <events:Connection id="connection" includeIn="connection"/>
    <events:Process id="process" includeIn="process"/>
    <events:Quota id="quota" includeIn="quota"/>
    <events:Screensaver id="screensaver" includeIn="screensaver"/>
    <events:Timer id="timer" includeIn="timer,date,afterinst"/>
    <events:WinEvent id="winevent" includeIn="winevent"/>
    <events:Window id="window" includeIn="window"/>
    
    <events:Ac id="ac" includeIn="ac"/>
    <events:Battery id="battery" includeIn="battery"/>
    <events:Call id="call" includeIn="call"/>
    <events:Position id="position" includeIn="position"/>
    <events:Standby id="standby" includeIn="standby"/>
    <events:Sms id="sms" includeIn="sms"/>

  </s:Form>

</utils:TitleWindowSaveCancel>