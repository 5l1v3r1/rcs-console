<?xml version="1.0" encoding="utf-8"?>
<utils:TitleWindowSaveCancel xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:utils="it.ht.rcs.console.utils.*"
                             xmlns:events="it.ht.rcs.console.operations.view.configuration.advanced.forms.events.*"
                             creationComplete="init()" title="Edit Event" save="save()">
  
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.operations.view.configuration.advanced.ConfigurationGraph;
      
      import locale.R;
      
      import mx.managers.PopUpManager;
      
      import spark.events.IndexChangeEvent;
      
      public var event:Object;
      public var graph:ConfigurationGraph;
      
      public var currentData:EventFields;
      
      private function init():void
      {
        desc.text = event.desc;

        for each (var s:String in ArrayList(type.dataProvider).source)
          if (s.toLowerCase() == event.event.toLowerCase())
            type.selectedItem = s;
        
        currentState = event.event;
        currentData = this[currentState] as EventFields;
        currentData.event = event;
        PopUpManager.centerPopUp(this);
      }
      
      private function onChange(e:IndexChangeEvent):void
      {
        currentState = type.selectedItem.toLowerCase();
        currentData = this[currentState] as EventFields;
        currentData.event = event;
        PopUpManager.centerPopUp(this);
      }
      
      private function save():void
      {
        event.desc = desc.text;
        event.event = currentState;
        Cleaner.clean(event);
        currentData.commit();
        close();
        graph.rebuildGraph();
      }
    ]]>
  </fx:Script>
  
  <utils:states>
    <s:State name="none"/>
    <s:State name="connection"/>
    <s:State name="process"/>
    <s:State name="quota"/>
    <s:State name="screensaver"/>
    <s:State name="timer"/>
    <s:State name="winevent"/>
    <s:State name="ac"/>
    <s:State name="battery"/>
    <s:State name="call"/>
    <s:State name="location"/>
    <s:State name="standby"/>
  </utils:states>
  
  <s:Form defaultButton="{saveButton}">

    <s:FormItem label="{R.get('NAME')}">
      <s:TextInput id="desc" width="160"/>
    </s:FormItem>
    
    <s:FormItem label="Type">
    
      <s:DropDownList id="type" width="160" change="onChange(event)" requireSelection="true">
        <s:dataProvider>
          <s:ArrayList>
            <fx:String>Connection</fx:String>
            <fx:String>Process</fx:String>
            <fx:String>Quota</fx:String>
            <fx:String>Screensaver</fx:String>
            <fx:String>Timer</fx:String>
            <fx:String>WinEvent</fx:String>
            <fx:String>AC</fx:String>
            <fx:String>Battery</fx:String>
            <fx:String>Call</fx:String>
            <fx:String>Location</fx:String>
            <fx:String>Standby</fx:String>
          </s:ArrayList>
        </s:dataProvider>
      </s:DropDownList>
    
    </s:FormItem>
    
    <s:Spacer height="20"/>
    
    <events:Connection id="connection" includeIn="connection"/>
    <events:Process id="process" includeIn="process"/>
    <events:Quota id="quota" includeIn="quota"/>
    <events:Screensaver id="screensaver" includeIn="screensaver"/>
    <events:Timer id="timer" includeIn="timer"/>
    <events:WinEvent id="winevent" includeIn="winevent"/>
    
    <events:Ac id="ac" includeIn="ac"/>
    <events:Battery id="battery" includeIn="battery"/>
    <events:Call id="call" includeIn="call"/>
    <events:Location id="location" includeIn="location"/>
    <events:Standby id="standby" includeIn="standby"/>

  </s:Form>

</utils:TitleWindowSaveCancel>