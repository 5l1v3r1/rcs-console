<?xml version="1.0" encoding="utf-8"?>
<utils:TitleWindowSaveCancel xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:utils="it.ht.rcs.console.utils.*"
                             xmlns:actions="it.ht.rcs.console.operations.view.configuration.advanced.forms.actions.*"
                             creationComplete="init()" save="save()" title="{R.get('EDIT_ACTION')}">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.operations.view.configuration.advanced.ConfigurationGraph;
      
      import locale.R;
      
      import mx.collections.ArrayList;
      import mx.managers.PopUpManager;
      import mx.utils.ObjectUtil;
      
      public var action:Object;
      public var originalSubactions:Array;
      public var subactions:Array;
      
      public var graph:ConfigurationGraph;
      
      public var currentData:ActionFields;
      
      [Bindable]
      private var mobile:Boolean;
      
      private function init():void
      {
        mobile = graph.config.globals.type.toLowerCase() == 'mobile';
        
        originalSubactions = action.subactions;
        subactions = ObjectUtil.copy(action).subactions;
        
        desc.text = action.desc;
        subactionsList.list.dataProvider = new ArrayList(subactions);
      }
      
      private function save():void
      {
        if (currentData && !currentData.isValid())
          return;
        
        action.desc = desc.text;
        action.subactions = subactions;
        PopUpManager.removePopUp(this);
        graph.rebuildGraph();
      }
      
      override protected function close(event:Event=null):void
      {
        action.subactions = originalSubactions;
        PopUpManager.removePopUp(this);
      }
      
      public function changeState(state:String):void
      {
        currentState = state;
        if (this.hasOwnProperty(currentState)) {
          currentData = this[currentState] as ActionFields;
          currentData.action = subactionsList.list.selectedItem;
        }
        if(state=="none")
        {
          currentData=null;
        }
        PopUpManager.centerPopUp(this);
      }
      
      
    ]]>
  </fx:Script>
  
  <utils:states>
    <s:State name="none"/>

    <s:State name="event"/>
    <s:State name="module"/>
    
    <s:State name="destroy"/>
    <s:State name="execute"/>
    <s:State name="log"/>
    <s:State name="sms"/>
    <s:State name="synchronize"/>
    <s:State name="uninstall"/>
  </utils:states>
  
  <utils:layout>
    <s:HorizontalLayout gap="20" paddingBottom="2" paddingLeft="2" paddingRight="10" paddingTop="2"/>
  </utils:layout>

  <s:Form defaultButton="{saveButton}">
    
    <s:FormItem label="{R.get('NAME')}">
      <s:TextInput id="desc" width="200"/>
    </s:FormItem>
    
    <s:FormItem label="{R.get('SUBACTIONS')}">
      <actions:Subactions id="subactionsList" form="{this}"/>
    </s:FormItem>
  
    <s:Spacer height="20"/>
    
    <actions:Destroy id="destroy" includeIn="destroy"/>
    <actions:Execute id="execute" includeIn="execute"/>
    <actions:Log id="log" includeIn="log"/>
    <actions:Sms id="sms" includeIn="sms"/>
    <actions:Syncronize id="synchronize" includeIn="synchronize" mobile="{mobile}"/>
    
  </s:Form>
  
  <fx:Declarations>
    <s:Resize id="res" duration="200" heightFrom="{height}" widthFrom="{width}"/>
  </fx:Declarations>
  
</utils:TitleWindowSaveCancel>