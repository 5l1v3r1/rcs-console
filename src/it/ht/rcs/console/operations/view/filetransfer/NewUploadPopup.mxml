<?xml version="1.0" encoding="utf-8"?>
<utils:TitleWindowSaveCancel xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:utils="it.ht.rcs.console.utils.*"
                             save="save()"> 
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.events.RefreshEvent;
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.operations.view.agents.build.UploadPopup;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.FlexGlobals;
      import mx.managers.PopUpManager;
      import mx.rpc.events.ResultEvent;

      public var section:OperationsSection;

      private var fileReference:FileReference;
      
      private function browse():void
      {
        fileReference = new FileReference();
        fileReference.addEventListener(Event.SELECT, fileSelection);
        fileReference.browse();
      }
      
      private function fileSelection(event:Event):void
      {
        currentState = 'fileSelected';
        fileName.text = event.target.name;
        PopUpManager.centerPopUp(this);
      }
      
      private function save():void
      {
        manageUpload();
      }
      
      private function onCreate(e:ResultEvent):void
      {
        close();
        FlexGlobals.topLevelApplication.dispatchEvent(new RefreshEvent(RefreshEvent.REFRESH));
      }
      
      private var uploadPopup:UploadPopup;
      private function manageUpload():void
      {
        fileReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, onUploadError);
        fileReference.addEventListener(IOErrorEvent.IO_ERROR, onUploadError);
        fileReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onUploadError);
        fileReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onUploadComplete);
        
        uploadPopup = PopUpManager.createPopUp(root, UploadPopup, true) as UploadPopup;
        uploadPopup.fileReference = fileReference;
        PopUpManager.centerPopUp(uploadPopup);
      }
      
      private function onUploadComplete(event:DataEvent):void
      {
        PopUpManager.removePopUp(uploadPopup);
        AgentManager.instance.createUpload(section.stateManager.selectedAgent, fileName.text, event.data, onCreate);
      }
      
      private function onUploadError(event:Event):void
      {
        PopUpManager.removePopUp(uploadPopup);
        AlertPopUp.show(event.type);
      }
    ]]>
  </fx:Script>
  
  <utils:states>
    <s:State name="normal"/>
    <s:State name="fileSelected"/>
  </utils:states>
  
  <s:Form defaultButton="{saveButton}">
    
    <s:FormItem label="{R.get('FILE')}">
      <s:Button excludeFrom="fileSelected" width="100" label="{R.get('BROWSE')}..." click="browse()"/>
      <s:Label id="fileName" includeIn="fileSelected" maxWidth="200" buttonMode="true" click="browse()"
               maxDisplayedLines="1" paddingTop="8" toolTip="{R.get('CLICK_TO_CHANGE_FILE')}"
               verticalAlign="middle"/>
    </s:FormItem>
    
  </s:Form>

</utils:TitleWindowSaveCancel>