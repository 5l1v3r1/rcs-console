<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:info="it.ht.rcs.console.operations.view.info.*"
					width="100%"
					height="100%"
					addedToStage="onAddedToStage()"
					removedFromStage="onRemovedFromStage()"
					xmlns:commands="it.ht.rcs.console.operations.view.commands.*">

	<fx:Script>
		<![CDATA[
			import it.ht.rcs.console.events.FilterEvent;
			import it.ht.rcs.console.events.RefreshEvent;
			import it.ht.rcs.console.evidence.controller.EvidenceManager;
			import it.ht.rcs.console.operations.view.OperationsSection;
			import it.ht.rcs.console.operations.view.evidences.EvidenceAdvancedViewer;

			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.rpc.events.ResultEvent;

			import spark.events.GridEvent;

			[Bindable]
			public var section:OperationsSection;

			[Bindable]
			public var dataProvider:ArrayCollection;



			private function onAddedToStage():void
			{
				EvidenceManager.instance.commandsFilter.target=section.stateManager.selectedTarget._id;
				EvidenceManager.instance.commandsFilter.agent=section.stateManager.selectedAgent._id;
				FlexGlobals.topLevelApplication.addEventListener(FilterEvent.FILTER_CHANGED, onRefresh);
				FlexGlobals.topLevelApplication.addEventListener(RefreshEvent.REFRESH, onRefresh);
				onRefresh()

			}

			private function openDetail():void
			{
					viewer.currentItems=commandsGrid.selectedItems;
					viewer.currentIndex=commandsGrid.selectedIndices[0];
					viewer.visible=viewer.includeInLayout=true;
					commandsGrid.visible=commandsGrid.includeInLayout=false;
			}

			private function onViewerClose():void
			{
				closeViewer();
			}

			private function closeViewer():void
			{
				viewer.visible=viewer.includeInLayout=false;
				//viewer.currentItem=null;
				commandsGrid.visible=commandsGrid.includeInLayout=true;
			}

			private function onRefresh(e:Event=null):void
			{
				EvidenceManager.instance.commands(onCommandsResult)
			}

			private function onCommandsResult(e:ResultEvent):void
			{
				dataProvider=e.result as ArrayCollection;
			}

			private function onRemovedFromStage():void
			{
				FlexGlobals.topLevelApplication.removeEventListener(RefreshEvent.REFRESH, onRefresh);

				if (viewer.visible)
				{
					closeViewer();
				}
			}

			private function onGridDoubleClick(e:GridEvent):void
			{
       
				openDetail()
			}
		]]>
	</fx:Script>

	<commands:CommandsAdvancedViewer id="viewer"
																	 visible="false"
																	 includeInLayout="false"
																	 dataProvider="{dataProvider}"
																	 close="onViewerClose();"/>
	<commands:CommandsGrid id="commandsGrid"
												 dataProvider="{dataProvider}"
												 itemDoubleClick="onGridDoubleClick(event)"/>
</s:VGroup>
