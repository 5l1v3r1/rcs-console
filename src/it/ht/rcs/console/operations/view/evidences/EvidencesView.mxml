<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:evidences="it.ht.rcs.console.operations.view.evidences.*"
         width="100%" height="100%" addedToStage="onAddedToStage()"
         removedFromStage="onRemovedFromStage()">

  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.DataLoadedEvent;
      import it.ht.rcs.console.events.FilterEvent;
      import it.ht.rcs.console.evidence.controller.EvidenceManager;
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.utils.Size;
      import it.ht.rcs.console.utils.TimeUtils;
      
      import mx.core.FlexGlobals;
      
      import spark.components.gridClasses.GridColumn;
      
      [Bindable]
      public var section:OperationsSection;
      
      private function onAddedToStage():void
      {
        EvidenceManager.instance.addEventListener(DataLoadedEvent.DATA_LOADED, onDataLoaded)
        EvidenceManager.instance.evidenceFilter.target = section.stateManager.selectedTarget._id;
        if (section.stateManager.selectedAgent != null)
          EvidenceManager.instance.evidenceFilter.agent = section.stateManager.selectedAgent._id;
        
        FlexGlobals.topLevelApplication.addEventListener(FilterEvent.FILTER_CHANGED, onFilterChanged);
        EvidenceManager.instance.listenRefresh();
        EvidenceManager.instance.refresh();
      }
      
      private function onRemovedFromStage():void
      {
        EvidenceManager.instance.removeEventListener(DataLoadedEvent.DATA_LOADED, onDataLoaded)
        FlexGlobals.topLevelApplication.removeEventListener(FilterEvent.FILTER_CHANGED, onFilterChanged);
        EvidenceManager.instance.unlistenRefresh();
      }
      
      private function onFilterChanged(event:FilterEvent):void
      {
        EvidenceManager.instance.refresh();
      }
      
      private function onGridChange():void
      {
        actionBar.selectedObjects=evidenceDg.selectedItems
      }
      
      private function onDataLoaded(e:DataLoadedEvent):void
      {
        evidenceDg.dataProvider=EvidenceManager.instance.getView();
      }
      
      
     
    ]]>
  </fx:Script>
  <evidences:EvidenceActionBar selectedObject="{evidenceDg.selectedItem}"  id="actionBar"/>
  <evidences:EvidenceGrid  id="evidenceDg" selectionMode="multipleRows" selectionChange="onGridChange()" updateComplete="onGridChange()"/>

</s:VGroup>