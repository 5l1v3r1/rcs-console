<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" show="onShow()" hide="onHide()">
  <fx:Metadata> 
    [Event(name="close", type="flash.events.Event")]
    [Event(name="selectionChange", type="flash.events.Event")]
  </fx:Metadata> 
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.evidence.model.Evidence;
      
      import mx.collections.IList;
      import mx.managers.PopUpManager;
      
      [Bindable]
      [Embed (source="/img/windows/cross.png" )]
      public var CloseIcon:Class;
      
      [Bindable]
      public var dataProvider:IList;
     
      private var _currentItem:Evidence;
      
      public var currentIndex:int;
      
      private function close():void
      {
       dispatchEvent(new Event("close"))
      }
      [Bindable]
      public function set currentItem(value:Evidence):void
      {
        _currentItem=value;
        if(hasState(_currentItem.type))
        {
          currentState=_currentItem.type;
        }
        else
        {
          currentState="none"
        }
      }
      
      public function get currentItem():Evidence
      {
        return  _currentItem;
      }
      
      private function onShow():void
      {
        stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyPress)
      }
      
      private function onHide():void
      {
        stage.removeEventListener(KeyboardEvent.KEY_DOWN, onKeyPress)
      }
      
      private function onKeyPress(e:KeyboardEvent):void
      {
        switch(e.keyCode)
        {
          case 39:
           if(currentIndex<dataProvider.length-1)
           {
             trace("avanti")
             currentIndex++
               currentItem=dataProvider.getItemAt(currentIndex) as Evidence;
             dispatchEvent(new Event("selectionChange"));
             
           }
            break;
          case 37:
            trace("indietro")
            currentIndex--
            currentItem=dataProvider.getItemAt(currentIndex) as Evidence;
            dispatchEvent(new Event("selectionChange"));
            break;
        }
      }
    ]]>
  </fx:Script>
  <s:states>
    <s:State name="none"/>
    <s:State name="addressbook"/>
    <s:State name="application"/>
    <s:State name="calendar"/>
    <s:State name="call"/>
    <s:State name="camera"/>
    <s:State name="chat"/>
    <s:State name="clipboard"/>
    <s:State name="device"/>
    <s:State name="file"/>
    <s:State name="keylog"/>
    <s:State name="message"/>
    <s:State name="mic"/>
    <s:State name="mouse"/>
    <s:State name="password"/>
    <s:State name="position"/>
    <s:State name="print"/>
    <s:State name="screenshot"/>
    <s:State name="url"/>
  </s:states>
  <s:BorderContainer width="100%" height="100%" borderColor="0xCCCCCC">
    <s:Image source="{CloseIcon}" x="{width-20}" y="{10}" useHandCursor="true" buttonMode="true" click="close()"/>
    <s:Label id="stateTxt" text="{currentState}"/>
  </s:BorderContainer>
</s:Group>
