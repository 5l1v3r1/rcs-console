<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
										xmlns:s="library://ns.adobe.com/flex/spark"
										xmlns:mx="library://ns.adobe.com/flex/mx"
										clipAndEnableScrolling="true"
										width="100%">

	<s:VGroup paddingBottom="4"
						paddingLeft="4"
						paddingRight="4"
						paddingTop="4"
						width="100%"
						horizontalAlign="{isPeer?'right':'left'}">

		<s:BorderContainer borderWeight="0.5"
											 borderAlpha="0.7"
											 borderStyle="solid"
											 borderColor="{isPeer?peerColor:targetColor}"
											 cornerRadius="8"
											 backgroundAlpha="0.4"
											 backgroundColor="{selected?selectedColor:isPeer?peerColor:targetColor}"
											 width="60%">
			<s:VGroup paddingBottom="8"
								paddingLeft="8"
								paddingRight="8"
								paddingTop="8"
								width="100%">
				<fx:Script>
					<![CDATA[
						import flashx.textLayout.conversion.TextConverter;

						import it.ht.rcs.console.utils.TimeUtils;
            
            import it.ht.rcs.console.operations.view.evidences.renderers.ChatIcons;

						[Bindable]
						private var isPeer:Boolean;

						[Bindable]
						private var peerColor:uint=0xCCFF33;

						[Bindable]
						private var targetColor:uint=0xCCCCCC;

						[Bindable]
						private var selectedColor:uint=0xFF0000;
            
            [Bindable]
            private var ImageClass:Class;

						private function formatDate(value:Number):String
						{
							return TimeUtils.timestampFormatter(value * 1000);
						}

						override public function prepare(hasBeenRecycled:Boolean):void
						{
							if (data)
							{
								var content:String=data.data.content;
								var d:String=formatDate(data.da)
								var nickname:String=content.split(":")[0];
								var message:String=content.substring(nickname.length + 1, content.length)
								var peers:Array=data.data.peer.split(" ")
                  if(data.data.program.toLowerCase()=="skype")
                  {
                    isPeer=isInArray(peers,nickname)
                    targetColor=0xCCCCCC
                  }
                  
                  else if(data.data.program.toLowerCase()=="facebook")
                  {
                    isPeer=data.data.peer==nickname
                    targetColor=0xCCCCCC
                  }
                  else if(data.data.program.toLowerCase()=="twitter")
                  {
                    isPeer=data.data.peer==nickname
                    targetColor=0x99FFFF
                  }
                ImageClass=ChatIcons[data.data.program.toLowerCase()]
								dateTxt.text=d;
								messageTxt.textFlow=TextConverter.importToFlow('<b>' + nickname + ":</b> " + message, TextConverter.TEXT_FIELD_HTML_FORMAT)
							}
						}

						private function isInArray(arr:Array, value:*):Boolean
						{
							var result:Boolean;
							for (var i:int=1; i < arr.length; i++) // count starts at 1 - the first one is the target???
							{
								if (arr[i] == value)
									result=true;
							}
							return result;
						}
					]]>
				</fx:Script>
      <s:HGroup width="100%">
        <s:BitmapImage width="16" height="16" source="{ImageClass}"/>
        <s:Label textAlign="right"
                 id="dateTxt"
                 width="100%"
                 fontWeight="bold"/>
      </s:HGroup>
				<s:RichText id="messageTxt"
										width="100%"/>
			</s:VGroup>
		</s:BorderContainer>
	</s:VGroup>
</s:GridItemRenderer>
