<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
										xmlns:s="library://ns.adobe.com/flex/spark"
										xmlns:mx="library://ns.adobe.com/flex/mx"
										clipAndEnableScrolling="true"
										width="100%">

	<s:VGroup paddingBottom="4"
						paddingLeft="4"
						paddingRight="4"
						paddingTop="4"
						width="100%"
						horizontalAlign="{isPeer?'right':'left'}">

		<s:BorderContainer borderWeight="0.5"
											 borderAlpha="0.7"
											 borderStyle="solid"
											 borderColor="{isPeer?peerColor:targetColor}"
											 cornerRadius="8"
											 backgroundAlpha="0.4"
											 backgroundColor="{selected?selectedColor:isPeer?peerColor:targetColor}"
											 width="60%">
			<s:VGroup paddingBottom="8"
								paddingLeft="8"
								paddingRight="8"
								paddingTop="8"
								width="100%">
				<fx:Script>
					<![CDATA[
						import flashx.textLayout.conversion.TextConverter;
						
						import it.ht.rcs.console.evidence.controller.EvidenceManager;
						import it.ht.rcs.console.operations.view.evidences.renderers.ChatIcons;
						import it.ht.rcs.console.utils.TimeUtils;
						
						import mx.rpc.events.FaultEvent;
						import mx.rpc.events.ResultEvent;
            
            import locale.R;

						[Bindable]
						private var isPeer:Boolean;

						[Bindable]
						private var peerColor:uint=0xCCFF33;

						[Bindable]
						private var targetColor:uint=0xCCCCCC;

						[Bindable]
						private var selectedColor:uint=0xFF0000;

						[Bindable]
						private var ImageClass:Class;

						private function formatDate(value:Number):String
						{
							return TimeUtils.timestampFormatter(value * 1000);
						}

						override public function prepare(hasBeenRecycled:Boolean):void
						{
							if (data)
							{
								var content:String;

								if (this.column.dataField == "data.tr")
								{
									content=data.data.tr;
								}
								else
								{
									content=data.data.content;
								}

								var d:String=formatDate(data.da);
								var message:String
								var nickname:String

								if (content)
								{
									var splitted:Array=content.split(":")
									/* if (splitted.length > 1)
									{
										//nickname
										nickname=splitted[0];
										message=content.substring(nickname.length + 1, content.length);
									} */
									
										//no nickname
										nickname="";
										if (data.data.from != null && data.data.from != "")
										{
											nickname=data.data.from_display || data.data.from;
										}
										message=content;
								}
								else
								{
									nickname="";
									message="";
								}
								if (data.data.content != null && data.data.tr == null && this.column.dataField == "data.tr")
								{
									  message='('+R.get('TRANSLATION_UNAVAILABLE')+')'
                 
                    var id:String=encodeURIComponent(data._id);
                    var target:String=encodeURIComponent(EvidenceManager.instance.evidenceFilter.target);  
                    //EvidenceManager.instance.translate(id, target, onTranslateResult, onTranslateFault);
              
								}
								var peers:Array
								if (data.data.rcpt != null && data.data.rcpt != "")
								{
									peers=data.data.rcpt.split(",");
								}
								else
								{
									peers=data.data.peer.split(" ");
								}
                //SKYPE
								if (data.data.program.toLowerCase() == "skype")
								{ 
                  if(data.data.incoming!=null )
                  {
                    isPeer=data.data.incoming
                  }
                  else
                  {
									  isPeer=(peers.indexOf(nickname)!=-1);
                  }
									targetColor=0xCCCCCC;
								}
                //FACEBOOK
								else if (data.data.program.toLowerCase() == "facebook")
								{
                  if(data.data.incoming!=null && data.data.rcpt!=null)
                  {
                    isPeer=data.data.incoming
                  }
                  else
                  {
                    isPeer=data.data.peer == nickname;
                  }
									
									targetColor=0xCCCCCC;
								}
                //TWITTER
								else if (data.data.program.toLowerCase() == "twitter")
								{
									if (data.data.rcpt != null && data.data.rcpt != "")
									{
										data.data.rcpt == nickname
									}
									else
									{
										isPeer=data.data.peer == nickname;
									}
									targetColor=0x99FFFF;
								}
                //WHATSAPP
								else if (data.data.program.toLowerCase() == "whatsapp")
								{
									if (data.data.rcpt != null && data.data.rcpt != "")
									{
										//isPeer=data.data.rcpt==nickname;
										isPeer=data.data.incoming;
									}
									else
									{
										isPeer=data.data.peer == nickname;
									}
									targetColor=0x99FFFF;
								}
                
                else if (data.data.program.toLowerCase() == "google talk")
                {
                  if (data.data.rcpt != null && data.data.rcpt != "")
                  {
                    //isPeer=data.data.rcpt==nickname;
                    isPeer=data.data.incoming;
                   
                  }
                  else
                  {
                    isPeer=data.data.peer == nickname;
                  }
                  targetColor=0x99FFFF;
                }

								ImageClass=ChatIcons[data.data.program.toLowerCase()]
								dateTxt.text=d;
								if (nickname != "" && nickname != null)
									messageTxt.textFlow=TextConverter.importToFlow('<b>' + nickname + ":</b> " + message, TextConverter.TEXT_FIELD_HTML_FORMAT);
								else
									messageTxt.textFlow=TextConverter.importToFlow(message, TextConverter.TEXT_FIELD_HTML_FORMAT);

							}
						}
            
            private function onTranslateResult(e:ResultEvent):void
            {
              trace("translation result");
              
              
              //data=e.result;
              //this.prepare(false);
              //evidence.data.tr=e.result.data.tr;
             
            }
            
            private function onTranslateFault(e:FaultEvent):void
            {
              trace("translation fault");      
            }

					]]>
				</fx:Script>
				<s:HGroup width="100%">
					<s:BitmapImage width="16"
												 height="16"
												 source="{ImageClass}"/>
					<s:Label textAlign="right"
									 id="dateTxt"
									 width="100%"
									 fontWeight="bold"/>
				</s:HGroup>
				<s:RichText id="messageTxt"
										width="100%"/>
			</s:VGroup>
		</s:BorderContainer>
	</s:VGroup>
</s:GridItemRenderer>
