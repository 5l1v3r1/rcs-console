<?xml version="1.0" encoding="utf-8"?>
<actionbar:ActionBar xmlns:fx="http://ns.adobe.com/mxml/2009"
                     xmlns:s="library://ns.adobe.com/flex/spark"
                     xmlns:mx="library://ns.adobe.com/flex/mx"
                     xmlns:actionbar="it.ht.rcs.console.main.actionbar.*"
                     xmlns:view="it.ht.rcs.console.operations.view.*">
  
  <s:Button label="{R.get('NEW_TARGET')}" click="onNewClick()"
            icon="@Embed('/img/NEW/newTarget.png')"/>
  
  <s:Button label="{R.get('EDIT')}" click="onEditClick()"
            enabled="{selectedObject &amp;&amp; selectedObject.status == 'open'}"
            icon="@Embed('/img/NEW/edit.png')"/>
  
  <s:Button label="{R.get('DELETE')}" click="onDeleteClick()" enabled="{selectedObject != null}"
            icon="@Embed('/img/NEW/delete_32.png')"/>
  
  <actionbar:Separator width="40"/>
  
  <s:HGroup height="100%" verticalAlign="middle">
    <s:ButtonBar dataProvider="{viewStack}" requireSelection="true"/>
  </s:HGroup>
  
  <s:Spacer width="100%"/>
  
  <s:TextInput id="searchInput" keyUp="onKeyUp(event)" removedFromStage="onRemovedFromStage()"/>
  
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.target.controller.TargetManager;
      import it.ht.rcs.console.target.model.Target;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.FlexGlobals;
      import mx.events.CloseEvent;
      import mx.managers.PopUpManager;
      
      [Bindable]
      public var section:OperationsSection;
      
      private function onNewClick():void
      {
        var popup:TargetsForm = PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, TargetsForm, true) as TargetsForm;
        popup.operation = section.stateManager.selectedOperation;
        popup.target = new Target(Target.defaultTarget());
        popup.currentState = TargetsForm.CREATE;
        PopUpManager.centerPopUp(popup);
      }
      
      private function onEditClick():void
      {
        var popup:TargetsForm = PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, TargetsForm, true) as TargetsForm;
        popup.operation = section.stateManager.selectedOperation;
        popup.target = selectedObject as Target;
        popup.currentState = TargetsForm.EDIT;
        PopUpManager.centerPopUp(popup);
      }
      
      private function onDeleteClick():void
      {
        AlertPopUp.show("Confirm operation deletion", R.get('CONFIRM'),
          AlertPopUp.YES|AlertPopUp.NO, null,
          function(e:CloseEvent):void {
            if (e.detail == AlertPopUp.YES)
              TargetManager.instance.removeItem(selectedObject);
          }, null, AlertPopUp.NO);
      }
      
      private function onRemovedFromStage():void
      {
        searchInput.text = '';
      }
      
      private function onKeyUp(event:KeyboardEvent):void
      {
        section.stateManager.searchField = searchInput;
        section.stateManager.view.refresh();
      }
    ]]>
  </fx:Script>

</actionbar:ActionBar>