<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:targets="it.ht.rcs.console.operations.view.targets.*"
					xmlns:view="it.ht.rcs.console.operations.view.*"
					width="100%"
					height="100%"
          addedToStage="onAddeToStage(event)" 
          removedFromStage="onRemovedFromStage(event)"
				>

	<fx:Script>
		<![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.target.controller.TargetManager;
      
      import locale.R;

			[Bindable]
			public var section:OperationsSection;

			private function onDoubleClick(event:MouseEvent):void
			{
				var item:*=event.currentTarget === list ? list.selectedItem : grid.selectedItem;
				if (item)
					section.stateManager.manageItemSelection(item);
			}

			private function onKeyUp(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER)
				{
					var item:*=event.currentTarget === list ? list.selectedItem : grid.selectedItem;
					if (item)
						section.stateManager.manageItemSelection(item);
				}
			}

      protected function onAddeToStage(event:Event):void
      {
        TargetManager.instance.listenPush();
        TargetManager.instance.refresh()
          if(Console.currentSession.user.is_tech() || Console.currentSession.user.is_view())
          {
            AgentManager.instance.listenFactoryPush()
            AgentManager.instance.refresh()
          }
        
      }
      
      protected function onRemovedFromStage(event:Event):void
      {
        TargetManager.instance.unlistenPush();
        AgentManager.instance.unlistenFactoryPush()
      }

			
		]]>
	</fx:Script>


	<targets:TargetsActionBar section="{section}"
														selectedObject="{list.selectedItem}"
														viewStack="{views}"/>


	<mx:ViewStack id="views"
								width="100%"
								height="100%"
								creationPolicy="all">
		<s:NavigatorContent label="{R.get('ICON_VIEW')}"
												hideEffect="{fadeOut}"
												icon="@Embed('/img/windows/icon.png')"
												showEffect="{fadeIn}">

			<s:HGroup width="100%"
								height="100%"
								gap="5">

				<view:BaseList id="list"
											 dataProvider="{section.stateManager.view}"
											 selectedItem="{grid.selectedItem}"
											 doubleClick="onDoubleClick(event)"
											 keyUp="onKeyUp(event)"/>

				<targets:TargetsInfoPanel selectedItem="{list.selectedItem}"/>

			</s:HGroup>

		</s:NavigatorContent>
		<s:NavigatorContent label="{R.get('TABLE_VIEW')}"
												hideEffect="{fadeOut}"
												icon="@Embed('/img/windows/list.png')"
												showEffect="{fadeIn}">


			<targets:TargetsGrid id="grid"
													 dataProvider="{section.stateManager.tableView}"
													 selectedItem="{list.selectedItem}"
													 doubleClick="onDoubleClick(event)"
													 keyUp="onKeyUp(event)"/>


		</s:NavigatorContent>
	</mx:ViewStack>


	<fx:Declarations>
		<s:Fade id="fadeIn"
						alphaFrom="0"
						alphaTo="1"
						duration="150"/>
		<s:Fade id="fadeOut"
						alphaFrom="1"
						alphaTo="0"
						duration="150"/>
	</fx:Declarations>

</s:VGroup>
