<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                autoDrawBackground="true" doubleClickEnabled="true">
  <!-- toolTipCreate="onTooltipCreate(event)" toolTip=" " toolTipShow="onTooltipShow(event)" -->
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.model.Agent;
      import it.ht.rcs.console.operation.model.Operation;
      import it.ht.rcs.console.target.model.Target;
      
      [Embed(source='img/items/operation_black.png')]
      private static const operationIcon:Class;
      
      [Embed(source='img/items/target_black.png')]
      private static const targetIcon:Class;
      
      [Embed(source='img/items/agent_black.png')]
      private static const agentIcon:Class;
      
      [Embed(source='img/items/factory_black.png')]
      private static const factoryIcon:Class;
      
      [Embed(source='img/evidence/square.png')]
      private static const evidenceIcon:Class;
      
      [Embed(source='img/evidence/square.png')]
      private static const fsIcon:Class;
      
      [Embed(source='img/evidence/square_black.png')]
      private static const infoIcon:Class;
      
      [Embed(source='img/evidence/square_black.png')]
      private static const configIcon:Class;
      
      [Embed(source='img/evidence/square_black.png')]
      private static const uploadIcon:Class;
      
      [Embed(source='img/evidence/square_black.png')]
      private static const downloadIcon:Class;
      
      override public function set data(value:Object):void
      {
        super.data = value;
        
        bottomLabel.text = data ? data.name : '';
        icon.source = data ? getImage() : null;
        alpha = data && data.hasOwnProperty('status') && data.status && data.status.toLowerCase() == 'closed' ? .5 : 1;
      }
      
      private function getImage():Class
      {
        if (data is Operation)
          return operationIcon;
        else if (data is Target)
          return targetIcon;
        else if (data is Agent && data._kind == 'agent')
          return agentIcon;
        else if (data is Agent && data._kind == 'factory')
          return factoryIcon;
          
          // see addCustomTypes() in stateManager
        else if (data is Object && data.customType == 'evidences')
          return evidenceIcon;
        else if (data is Object && data.customType == 'filesystem')
          return fsIcon;
        else if (data is Object && data.customType == 'info')
          return infoIcon;
        else if (data is Object && data.customType == 'configlist')
          return configIcon;
        else if (data is Object && data.customType == 'upload')
          return uploadIcon;
        else if (data is Object && data.customType == 'download')
          return downloadIcon;
        
        return null;
      }
      
//      protected function onTooltipCreate(event:ToolTipEvent):void
//      {
//        if (event.currentTarget.data is Agent)
//          event.toolTip = new AgentTooltip();
//      }
//      
//      protected function onTooltipShow(event:ToolTipEvent):void
//      {
//        // To avoid showing an empty tooltip on elements that do not have a custom one.
//        // Setting tooltip = null or visible = false has no effect.
//        if (!(event.currentTarget.data is Agent))
//          event.toolTip.alpha = 0;
//      }
      
    ]]>
  </fx:Script>
  
  <s:Image id="icon" top="5" width="70" height="60" horizontalCenter="0"/>
  
  <s:Label id="bottomLabel" top="72" width="110" horizontalCenter="0" paddingBottom="5"
           textAlign="center"/>
  
</s:ItemRenderer>