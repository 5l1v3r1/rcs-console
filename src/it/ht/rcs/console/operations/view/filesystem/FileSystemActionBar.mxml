<?xml version="1.0" encoding="utf-8"?>
<actionbar:ActionBar xmlns:fx="http://ns.adobe.com/mxml/2009"
                     xmlns:s="library://ns.adobe.com/flex/spark"
                     xmlns:mx="library://ns.adobe.com/flex/mx"
                     xmlns:actionbar="it.ht.rcs.console.main.actionbar.*">
  
  <s:Button label="{R.get('EXPORT')}"
            icon="@Embed('/img/NEW/export.png')" click="exportFS(event)"/>
  
  <s:Button label="{R.get('DOWNLOAD_FILE')}" click="onDownload(event)"
            enabled="{selectedObject != null &amp;&amp; selectedObject.attr == FileSystemView.FILE}"
            icon="@Embed('/img/NEW/download.png')"/>
  
  <s:Button label="{R.get('RETRIEVE_TREE')}" click="onRetrieve(event)"
            enabled="{selectedObject != null &amp;&amp; (selectedObject.attr == FileSystemView.EMPTY_FOLDER ||
                                                         selectedObject.attr == FileSystemView.FULL_FOLDER  ||
                                                         selectedObject.attr == FileSystemView.SUBROOT)
            &amp;&amp; section.stateManager.selectedTarget.status=='open' &amp;&amp; selectedObject.agent.status=='open'
            }"
      
            icon="@Embed('/img/NEW/download.png')"/>
  
  <s:Spacer width="100%"/>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.agent.model.Agent;
      import it.ht.rcs.console.operations.view.OperationsSection;
      
      import locale.R;
      
      import mx.controls.Alert;
      import mx.managers.PopUpManager;
      import mx.rpc.events.ResultEvent;
      [Bindable]
      public var section:OperationsSection;
      
      private function onDownload(e:MouseEvent):void
      {
        AgentManager.instance.createDownload(selectedObject.evidence.aid, selectedObject.evidence.data.path, onCreate);
      }
      
      private function onCreate(e:ResultEvent):void
      {
        Alert.show('Item scheduled for download');
      }
      
      private function onRetrieve(e:MouseEvent):void
      {
        var popup:DepthPopup = PopUpManager.createPopUp(root, DepthPopup, true) as DepthPopup;
        popup.item = selectedObject;
        PopUpManager.centerPopUp(popup);
      }
      
      protected function exportFS(event:MouseEvent):void
      {
        var popup:Export = PopUpManager.createPopUp(root, Export, true) as Export;
        popup.target = section.stateManager.selectedTarget;
        popup.agent = section.stateManager.selectedAgent;
        PopUpManager.centerPopUp(popup);
      }
      
    ]]>
  </fx:Script>
  
</actionbar:ActionBar>