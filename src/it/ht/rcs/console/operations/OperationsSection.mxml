<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:main="it.ht.rcs.console.operations.main.*"
         xmlns:breadcrumbs="it.ht.rcs.console.operations.main.breadcrumbs.*"
         addedToStage="onAddedToStage(event)" creationComplete="init()"
         removedFromStage="onRemovedFromStage(event)" title="OPERATIONS">

  <s:states>
    <s:State name="default"/>
    
    <s:State name="allOperations"/>
    <s:State name="singleOperation"/>
    
    <s:State name="allTargets"/>
    <s:State name="singleTarget"/>
    
    <s:State name="allAgents"/>
    <s:State name="singleAgent"/>
  </s:states>
  
  <s:layout>
    <s:VerticalLayout gap="5" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
  </s:layout>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.events.SessionEvent;
      import it.ht.rcs.console.operations.main.StateManager;
      
      import mx.core.FlexGlobals;
      
      [Bindable]
      public var stateManager:StateManager;
      
//      private var hasAlreadySwitchedState:Boolean = false;
      private function init():void
      {
        stateManager = new StateManager(this);
        FlexGlobals.topLevelApplication.addEventListener(SessionEvent.LOGGING_OUT, onLoggingOut);
        stateManager.setState('allOperations');
      }
      
      private function onAddedToStage(event:Event):void
      {
        if (stateManager)
          stateManager.setState(currentState);
      }
      
      private function onRemovedFromStage(event:Event):void
      {
        if (stateManager)
          stateManager.stopManagers();
      }
      
      private function onLoggingOut(event:SessionEvent):void
      {
        stateManager.resetState();
      }
      
      public function changeSection(event:SectionEvent):void
      {
        trace('');
//        if (event.item == null) { return };
//        
//        var targetState:String;
//        switch (event.item._kind) {
//          case 'operation':
//            targetState = 'singleOperation';
//            break;
//          default:
//            break;
//        }
//        selectedOperation = OperationManager.instance.getItem(event.item._id);
//        
//        switchState(targetState);
//        hasAlreadySwitchedState = true;
      }
    ]]>
  </fx:Script>
  
  
  <breadcrumbs:OperationBreadcrumbs/>
  
  <main:OperationButtonBar id="buttonBar" currentState="{currentState}" section="{this}"/>
  
  <main:OperationBody id="body"/>
  
</s:Panel>