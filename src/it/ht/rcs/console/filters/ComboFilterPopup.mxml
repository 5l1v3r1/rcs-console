<?xml version="1.0" encoding="utf-8"?>
<filters:AbstractFilterPopup xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:mx="library://ns.adobe.com/flex/mx"
                             xmlns:xt="library://ns.tink.ws/flex/mx"
                             xmlns:filters="it.ht.rcs.console.filters.*" show="show()" xmlns:utils="it.ht.rcs.console.utils.*">

  <xt:FilterComboBox id="combo" width="150" styleName="auditFilter" enter="enter()" matchedTextStyleName="matched"/>
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.events.FilterEvent;
      
      import mx.core.FlexGlobals;

      override public function commit(fireEvent:Boolean=true):void
      {
        hasFilter = combo.selectedItem != null;
        hasFilter ? filter[property] = combo.selectedItem : delete(filter[property]);
        visible = false;
        if (fireEvent)
          FlexGlobals.topLevelApplication.dispatchEvent(new FilterEvent(FilterEvent.FILTER_CHANGED));
      }
      
      override public function reset(fireEvent:Boolean=true):void
      {
        combo.selectedItem = null;
        commit(fireEvent);
      }
      
      override public function set filterValues(filterValues:Object):void
      {
        combo.dataProvider = filterValues;
        combo.selectedItem = filter[property];
      }
      
      private function enter():void
      {
        if (combo.filteredCollection.length == 1)
          combo.dropdown.selectedIndex = 0;
        if (!combo.dropdown.visible && combo.selectedItem)
          commit();
      }
      
      protected function show():void
      {
        combo.setFocus();
        combo.selectedItem = filter[property];
      }
      
    ]]>
  </fx:Script>
  
</filters:AbstractFilterPopup>