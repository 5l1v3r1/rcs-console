<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
							 xmlns:s="library://ns.adobe.com/flex/spark"
							 xmlns:mx="library://ns.adobe.com/flex/mx"
							 xmlns:utils="it.ht.rcs.console.utils.*"
							 xmlns:editors="it.ht.rcs.console.operations.view.evidences.actionbar.editors.*"
							 xmlns:renderers="it.ht.rcs.console.entities.view.renderers.*"
							 creationComplete="init()"
							 title="Select the target" close="close()">
	<fx:Metadata>
    [Event(name="targetSelected", type="flash.events.Event")]
  </fx:Metadata>


	<fx:Script>
		<![CDATA[
			import it.ht.rcs.console.entities.controller.EntityManager;
			import it.ht.rcs.console.entities.model.Entity;
			import it.ht.rcs.console.events.SaveEvent;
			import it.ht.rcs.console.target.model.Target;
			import it.ht.rcs.console.utils.AlertPopUp;

			import locale.R;

			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;


			[Bindable]
			public var entity1:Entity;
			[Bindable]
			public var entity2:Entity;

			public var selectedTarget:Entity;
			public var info:Array;

			private function init():void
			{
				entity1Icon.init();
				entity2Icon.init();
			}

			protected function onTargetSelected(event:MouseEvent):void
			{
				if (event.currentTarget.id == "entity1Icon")
				{
					selectedTarget=entity1;
				}

				else if (event.currentTarget.id == "entity2Icon")
				{
					selectedTarget=entity2;
				}
				dispatchEvent(new Event("targetSelected"))
				PopUpManager.removePopUp(this)
			}
      
      protected function close():void
      {
        PopUpManager.removePopUp(this)
        
      }
      
    ]]>
	</fx:Script>


	<s:Form width="100%">

		<s:HGroup width="90%"
							horizontalAlign="center"
							verticalAlign="middle">
			<renderers:EntityRenderer entity="{entity1}"
																id="entity1Icon"
																buttonMode="true"
																useHandCursor="true"
																click="onTargetSelected(event)"/>

			<renderers:EntityRenderer entity="{entity2}"
																id="entity2Icon"
																buttonMode="true"
																useHandCursor="true"
																click="onTargetSelected(event)"/>
		</s:HGroup>


	</s:Form>

</s:TitleWindow>
