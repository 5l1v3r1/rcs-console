<?xml version="1.0" encoding="utf-8"?>
<actionbar:ActionBar xmlns:fx="http://ns.adobe.com/mxml/2009"
                     xmlns:s="library://ns.adobe.com/flex/spark"
                     xmlns:mx="library://ns.adobe.com/flex/mx"
                     xmlns:actionbar="it.ht.rcs.console.main.actionbar.*"
                     xmlns:view="it.ht.rcs.console.entities.view.*">
  
  <fx:Metadata>
    [Event(name="update", type="flash.events.Event")]
    
  </fx:Metadata>
  <s:Button label="{R.get('EDIT')}" 
            icon="@Embed('/img/NEW/edit.png')" click="onEditClick()" enabled="{Console.currentSession.user.is_admin_profiles()}"/>
<!--  
  <s:Button label="{R.get('DELETE')}" 
            icon="@Embed('/img/NEW/delete_32.png')"/>-->
  
  
  <actionbar:Separator/>
  <s:Button label="{R.get('JUMP_TO_TARGET')}" click="onJumpClick()"
            enabled="{Console.currentSession.user.is_admin_profiles()}" icon="@Embed('/img/NEW/jumpToTarget.png')"/>
  <s:Spacer width="100%"/>

  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.dashboard.controller.DashboardController;
      import it.ht.rcs.console.entities.controller.EntityManager;
      import it.ht.rcs.console.entities.model.Entity;
      import it.ht.rcs.console.utils.AlertPopUp;
      
      import locale.R;
      
      import mx.core.FlexGlobals;
      import mx.events.CloseEvent;
      import mx.managers.PopUpManager;
      
      [Bindable]
      public var section:EntitiesSection;
      
      [Bindable]
      public var entity:Entity;
      
      [Bindable]
      public var sheet:EntitySheet;
      
      private function onNewClick():void
      {
        
      }
      
      private function onEditClick():void
      {
        var popup:EntityForm = PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, EntityForm, true) as EntityForm;
        popup.addEventListener("update", onUpdate) 
        popup.entity = entity
        popup.entity.desc = sheet.entity.desc;
        PopUpManager.centerPopUp(popup);
      }
      
      private function onJumpClick():void
      {
       
      }
      
      private function onUpdate(e:Event):void
      {
        entity.name=e.currentTarget.entity.name;
        entity.desc=e.currentTarget.entity.desc;
        dispatchEvent(e)
      }
      private function onDeleteClick():void
      {
        
      }
      
      private function onClose():void
      {

      }
      
      private function onRemovedFromStage():void
      { 
        //section.stateManager.view.refresh();
        //section.stateManager.tableView.refresh();
      }
      
     
      
    ]]>
  </fx:Script>

</actionbar:ActionBar>