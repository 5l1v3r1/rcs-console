<?xml version="1.0" encoding="utf-8"?>

<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
									 xmlns:s="library://ns.adobe.com/flex/spark"
									 xmlns:mx="library://ns.adobe.com/flex/mx"
									 xmlns:maps="com.google.maps.*"
									 xmlns:components="it.ht.rcs.console.entities.view.components.*"
									 xmlns:graph="it.ht.rcs.console.entities.view.graph.*"
									 height="100%"
									 width="100%"
									 borderColor="0xCCCCCC"
									 backgroundColor="0xFFFFFF"
									 backgroundAlpha="1"
									 addedToStage="init()"
									 creationComplete="init()">
	<fx:Script>
		<![CDATA[
			import it.ht.rcs.console.entities.controller.EntityManager;
			import it.ht.rcs.console.entities.model.Entity;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			public var entities:ArrayCollection;
      
      private var entitiesToShow:ArrayCollection;

			private var numEntitiesToShow:int=0;

			private function init():void
			{
				if (graph)
				{
					numEntitiesToShow=entities.length;
          entitiesToShow=new ArrayCollection();
          
					for (var i:int=0; i < entities.length; i++)
					{
						EntityManager.instance.show(entities.getItemAt(i)._id, onDetailResult)
					}

				}
			}

			private function getEntityById(id:String):Entity
			{
				for (var i:int=0; i < entities.length; i++)
				{
					var entity:Entity=entities.getItemAt(i) as Entity;
					if (entity._id == id)
					{
						return entity;
            break;
					}
				}
				return null;
			}

			private function onDetailResult(e:ResultEvent):void
			{
				numEntitiesToShow--
        entitiesToShow.addItem(e.result)
				if (numEntitiesToShow == 0)
				{
					graph.draw(entitiesToShow)
				}
			}
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout paddingBottom="10"
											paddingLeft="10"
											paddingRight="10"
											paddingTop="10"
											gap="6"/>
	</s:layout>
	<s:Scroller id="scroller"
							width="100%"
							height="100%">
		<graph:LinkGraph id="graph"/>
	</s:Scroller>
</s:BorderContainer>
