<?xml version="1.0" encoding="utf-8"?>
<main:Section xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:mx="library://ns.adobe.com/flex/mx"
              xmlns:main="it.ht.rcs.console.main.*"
              xmlns:operations="it.ht.rcs.console.entities.view.operations.*"
              creationComplete="init()" xmlns:view="it.ht.rcs.console.entities.view.*"
              >
  <fx:Script>
    <![CDATA[
      
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.operation.controller.OperationManager;
      import it.ht.rcs.console.operations.view.OperationsSectionStateManager;
      
      [Bindable]
      public var stateManager:EntitiesSectionStateManager;
      
      private var eventToManage:SectionEvent = null;
      
      private function init():void
      {
        stateManager = new EntitiesSectionStateManager(this);
        
        if (eventToManage)
          stateManager.manageItemSelection(null, eventToManage);
        else
          stateManager.setState('allOperations');
      }
      
      private function onUpdate():void
      {
        entitySheet.entity.name=actionBar.entity.name;
        entitySheet.entity.desc=actionBar.entity.desc;
      }
      
      public function changeSection(event:SectionEvent):void
      {
        if (!event.item) return;
        
        if (stateManager) {
          currentState = 'none';
          stateManager.setState('none');
        }
        
        // This method is called before init if we never entered the operation section,
        // so we check if stateManager is present, otherwise we delay the item selection
        if (stateManager)
          stateManager.manageItemSelection(null, event);
        else
          eventToManage = event;
      }
      
      
    ]]>
  </fx:Script>
  <main:states>
    <s:State name="none"/>
    <s:State name="allOperations"/>
    <s:State name="singleOperation"/>
    <s:State name="allEntities"/>
    <s:State name="singleEntity"/>
    <s:State name="links"/>
    <s:State name="map"/>
  </main:states>
  
  <main:layout>
    <s:VerticalLayout paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" gap="2"/>
  </main:layout>
  <view:Breadcrumb section="{this}"/>
  <operations:OperationsEntityView includeIn="allOperations" section="{this}"/>
  <view:EntitiesView includeIn="singleOperation, allEntities" section="{this}"/>
  <view:EntityActionBar includeIn="singleEntity" entity="{stateManager.selectedEntity}" sheet="{entitySheet}" update="onUpdate()" id="actionBar"/>
  <view:EntitySheet includeIn="singleEntity" entity="{stateManager.selectedEntity}" id="entitySheet" update="onUpdate()"/>
  <view:LinkActionBar includeIn="links"/>
  <view:LinkView includeIn="links"/>
  <view:MapActionBar includeIn="map"/>
  <view:MapView includeIn="map"/>
</main:Section>