<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          creationComplete="init()" gap="0">
  
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.accounting.controller.GroupManager;
      import it.ht.rcs.console.accounting.model.Group;
      
      import mx.collections.ArrayList;
      import mx.collections.IList;
      import mx.collections.ListCollectionView;
      
      import spark.events.IndexChangeEvent;
      
      [Bindable] private var selectedDP:IList;
      [Bindable] private var availableDP:ListCollectionView;
      
      private function init():void
      {
        availableDP = GroupManager.instance.getView(null, listFilterFunction);
      }
      
      public function set dataProvider(dp:IList):void { selectedDP = new ArrayList(dp.toArray()); } // Work on copy, otherwise changes are commited immediately!
      public function get dataProvider():IList { return selectedDP; }
      
      private function addGroup(event:IndexChangeEvent):void
      {
        var _id:String = event.currentTarget.selectedItem._id;
        selectedDP.addItem(_id);
        availableDP.refresh();
      }
      
      private function removeGroup(event:MouseEvent):void
      {
        var idx:int = selectedDP.getItemIndex(selectedGroups.selectedItem);
        selectedDP.removeItemAt(idx);
        selectedGroups.selectedIndex = idx < selectedDP.length ? idx : idx - 1;
        availableDP.refresh();
      }
      
      private function listFilterFunction(item:Object):Boolean
      {
        return selectedDP.getItemIndex(item._id) == -1;
      }
      
      private function groupLabelFunction(_id:Object):String
      {
        var group:Group = GroupManager.instance.getItem(_id as String);
        return group ? group.name : '';
      }
    ]]>
  </fx:Script>
  
  
  <s:List id="selectedGroups" width="100%" height="120" dataProvider="{selectedDP}"
          labelFunction="groupLabelFunction"/>
  
  <s:HGroup width="100%" gap="0" horizontalAlign="right">

    <s:Button width="30" label="-" click="removeGroup(event)"
              enabled="{selectedGroups.selectedItem != null}"/>
    
    <mx:PopUpButton width="48" label="+" openAlways="true">
      <mx:popUp>
        <s:List id="availableGroups" change="addGroup(event)" dataProvider="{availableDP}"
                labelField="name"/>
      </mx:popUp>
    </mx:PopUpButton>
    
  </s:HGroup>
  
  
</s:VGroup>