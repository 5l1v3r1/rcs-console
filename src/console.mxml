<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:main="it.ht.rcs.console.*"
                       xmlns:effects="it.ht.rcs.console.effects.*"
                       applicationComplete="init()" closing="onExit(event)"
                       currentState="{console.LOGGED_OUT_STATE}" showStatusBar="false"
                       skinClass="it.ht.rcs.console.skins.ApplicationSkin" title="RCS Console"
                       backgroundColor.loggedIn="#CCCCCC"
                       backgroundAlpha.loggedOut="0.7" backgroundColor.loggedOut="#6FA0BF">

  <fx:Style source="it/ht/rcs/console/styles/style.css"/>

  <fx:Script>
  <![CDATA[
    import it.ht.rcs.console.DB;
    import it.ht.rcs.console.II18N;
    import it.ht.rcs.console.accounting.model.Session;
    import it.ht.rcs.console.accounting.controller.SessionManager;
    
    import mx.collections.ArrayCollection;
    import mx.core.FlexGlobals;
    
    public static const LOGGED_IN_STATE:String = "loggedIn";
    public static const LOGGED_OUT_STATE:String = "loggedOut";
    
    public static var appDescriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;
    public static var ns:Namespace = appDescriptor.namespace();
    
    /* This variable contains the version number, the value is taken dynamically from console-app.xml */ 
    [Bindable]
    public static var appVersion:String = appDescriptor.ns::versionLabel;
    [Bindable]
    public static var rcsVersion:String = "8.0.0";
    
    /* supported locales for the application */
    [Bindable]
    public static var locales:ArrayCollection = new ArrayCollection(['en_US', 'it_IT']); 

    /* current session once logged in */
    [Bindable]
    public static var currentSession:Session;
	  
	  [Bindable]
	  public static var currentDB:DB;
    
    private function init():void
    {
      /* center on screen */
      nativeWindow.x = Screen.mainScreen.bounds.width / 2 - this.width / 2;
      nativeWindow.y = Screen.mainScreen.bounds.height / 2 - this.height / 2;       

      /* start maximized on small screen */
      if (Screen.mainScreen.bounds.width <= 1280)
        FlexGlobals.topLevelApplication.maximize();
    }

    protected function onExit(event:Event):void
    {
      event.preventDefault();
      SessionManager.instance.logout(true);
    }
    
  ]]>
  </fx:Script>
  
  <fx:Metadata>
    [ResourceBundle("localized_main")]
    [ResourceBundle("localized_db_messages")] 
  </fx:Metadata>
  
  <s:states>
		<s:State enterState="{FlexGlobals.topLevelApplication.showStatusBar = true}" name="loggedIn"/>
		<s:State enterState="{FlexGlobals.topLevelApplication.showStatusBar = false}" name="loggedOut"/>
	</s:states>
  
  <!-- LoggedOut state -->
  <main:Login id="loginPanel" includeIn="loggedOut"/>
  <effects:Reflector includeIn="loggedOut" alpha="0.5" blurAmount="0.5" falloff="0.5" target="{loginPanel}"/>
  
  <!-- LoggedIn state -->
  <main:Main id="mainPanel" includeIn="loggedIn" width="100%" height="100%"/>
  
</s:WindowedApplication>